<?xml version='1.0' encoding='UTF-8'?>
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- Abstract Algebra: Theory and Applications        -->
<!--                                                  -->
<!-- Text: Copyright (C) 1997-2023  Thomas W. Judson  -->
<!-- Sage: Copyright (C) 2010-2023  Robert A. Beezer  -->
<!-- See the file COPYING for copying conditions.     -->
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- See the file COPYING for copying conditions.     -->
<chapter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sets" permid="xcu">

<!-- % TWJ, 2010/03/31 -->
<!-- % Chapters now begin with Chapter 1 -->

  <title>Preliminares</title>
  <introduction permid="Put">
    <p permid="DBN">
      Se requiere una cierta madurez matemática para encontrar y estudiar aplicaciones del álgebra abstracta.  Un conocimiento básico de teoría de conjuntos, inducción matemática, relaciones de equivalencia y matrices es necesario. Aún más importante es la habilidad de leer y entender demostraciones matemáticas.  En este capítulo resumiremos los prerrequisitos necesarios para un curso de álgebra abstracta.
    </p>
  </introduction>

  <section xml:id="sets-section-note-on-proofs" permid="yRH">
    <title>Una Breve Nota sobre Demostraciones</title>
 
    <introduction permid="vBC">
      <p permid="jIW">
        La matemática abstracta es diferente de otras ciencias. En las ciencias de laboratorio como química y física, los científicos hacen experimentos para descubrir nuevos principios y verificar teorías.  Si bien las matemáticas están frecuentemente motivadas por experimentos físicos o simulaciones computacionales, se hacen rigurosas mediante el uso de  argumentos lógicos. Al estudiar matemáticas abstractas, usamos lo que se llama el método axiomático; es decir, tomamos una colección de objetos <m>\mathcal S</m> y suponemos ciertas reglas sobre su estructura. Estas reglas se llaman <term>axiomas</term>. Usando los axiomas para <m>\mathcal S</m>, queremos deducir otra información sobre <m>\mathcal S</m> usando argumentos lógicos.  Requerimos que nuestros axiomas sean consistentes; es decir, no debiesen contradecirse entre ellos. También exigimos que no haya demasiados axiomas. Si un sistema de axiomas es demasiado restrictivo, habrá muy pocos ejemplos de la estructura matemática.
      </p>  

      <p permid="PQf">
        Un <term>enunciado</term> en lógica o matemáticas es una afirmación o frase, en lenguaje natural o usando simbología matemática, que es verdadera o falsa. Considere los siguientes ejemplos:
        <ul permid="nBE">
          <li permid="dcz"><p permid="glA"><m>3 + 56 - 13 + 8/2 </m>.
    </p></li>

          <li permid="JjI"><p permid="MsJ">Todos los gatos son negros.
    </p></li>
   
          <li permid="pqR"><p permid="szS"><m>2 + 3 = 5</m>.
    </p></li>
   
          <li permid="Vya"><p permid="YHb"><m>2x = 6</m> si y solo si <m>x = 4</m>.
    </p></li>
   
          <li permid="BFj"><p permid="EOk">Si <m>ax^2 + bx + c = 0</m> y <m>a \neq 0</m>, entonces <me permid="IAb">x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}</me>.
    </p></li>
   
          <li permid="hMs"><p permid="kVt"><m>x^3 - 4x^2 + 5 x - 6</m>.
    </p></li>
   
        </ul>
      Todos salvo el primero y el último son enunciados, y deben ser verdaderos o falsos.
    </p> 
   
      <p permid="vXo">
        Una <term>demostración matemática</term> no es más ni menos que un argumento convincente de la veracidad de un enunciado. Un tal argumento debiese contener suficiente detalle para convencer a la audiencia; por ejemplo podemos ver que el enunciado <q><m>2x = 6</m> si y solo si <m>x = 4</m></q> es falso evaluando <m>2 \cdot 4</m> y notando que  <m>6 \neq 8</m>, un argumento que satisfacerá a cualquiera. Por supuesto, las audiencias son muy diversas: demostraciones pueden estar dirigidas a otro estudiante, a un profesor, o al lector de un escrito.  Si se presenta más detalle del necesario en una demostración, ésta puede ser muy larga o incluso confusa.  Si se omiten demasiados detalles, el argumento puede no ser convincente.  Es importante tener en cuenta la audiencia al escribir la demostración.  Estudiantes de secundaria requerirán mucho más detalles que estudiantes de post-grado.  Una buena regla de oro en un curso introductorio de álgebra abstracta es que la demostración debiese ser escrita pensando en los compañeros de uno, sean estos otros estudiantes o sean lectores del texto.
    </p>

      <p permid="cex">Examinemos distintos tipos de enunciados.  Un enunciado puede ser tan simple como <q><m>10/5 = 2</m>;</q> pero, los matemáticos usualmente están interesados en enunciados más complejas tales como <q>Si <m>p</m>, entonces <m>q</m>,</q> donde <m>p</m> y <m>q</m> son a su vez enunciados.  Si cierto enunciado es conocido o suponemos que es cierto, queremos saber lo que podemos decir sobre otros enunciados.  Acá <m>p</m> se llama <term>hipótesis</term> y <m>q</m> se conoce como <term>conclusión</term>.  Considere el siguiente enunciado: Si <m>ax^2 + bx + c = 0</m> y <m>a \neq 0</m>, entonces  
        <me permid="oHk">x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}</me>.
      La hipótesis es que <m>ax^2 + bx + c = 0</m> y <m>a \neq 0</m>; la conclusión es 
        <me permid="UOt">x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}</me>.
      Note que el enunciado no dice nada sobre si la hipótesis es verdadera o no. Pero, si el enunciado completo es verdadero y podemos mostrar que  <m>ax^2 + bx + c = 0</m> con <m>a \neq 0</m> es verdadero, entonces la conclusión <em>debe</em> ser verdadera.  Una demostración de este enunciado puede ser simplemente una serie de ecuaciones: 
        <md permid="AVC">
          <mrow>ax^2 + bx + c &amp; =  0</mrow>
          <mrow>x^2 + \frac{b}{a}x &amp; =  - \frac{c}{a}</mrow>
          <mrow>x^2 + \frac{b}{a}x + \left( \frac{b}{2a} \right)^2 &amp; =  \left( \frac{b}{2a} \right)^2 - \frac{c}{a}</mrow>
          <mrow>\left(x + \frac{b}{2a} \right)^2 &amp; =  \frac{b^2 - 4ac}{4a^2}</mrow>
          <mrow>x + \frac{b}{2a}  &amp; =  \frac{ \pm \sqrt{ b^2 -4ac}}{2a}</mrow>
          <mrow>x &amp; =  \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}</mrow>
        </md>.
    </p>

      <p permid="IlG">Si podemos demostrar la veracidad del enunciado, entonces el enunciado se llama <term>proposición</term>.  Una proposición de mayor importancia se llama <term>Teorema</term>.  A veces, en lugar de demostrar un teorema o proposición de una sola vez, descomponemos la demostración en módulos; es decir, demostramos varias proposiciones auxiliares, que se llaman <term>Lemas</term>, y usamos los resultados de estas proposiciones para demostrar el resultado principal. Si podemos demostrar una proposición o teorema, frecuentemente podremos obtener resultados relacionados con muy poco esfuerzo adicional, estos se llaman <term>Corolarios</term>.
    </p>

    </introduction>
 
    <subsection xml:id="sets-subsection-cautions" permid="djD">
      <title>Algunas Advertencias y Sugerencias</title>
 
      <p permid="IVA">Existen diversas estrategias para demostrar proposiciones.  Además de usar diferentes métodos de demostración, los estudiantes suelen cometer errores comunes cuando recién comienzan a demostrar teoremas. Para ayudar a los estudiantes primerizos de matemáticas abstractas, listamos acá algunas de las dificultades que pueden encontrar y algunas de las estrategias a su disposición. Es una buena idea volver a mirar esta lista como recordatorio. (Otras técnicas de demostración aparecerán a lo largo de este capítulo y en el resto del texto.) 
        <ul permid="QOh">
 
          <li permid="NTB"><p permid="RcC">Un teorema no puede ser demostrado con un ejemplo; pero, el método estándar para demostrar que una proposición no es verdadera, es dar un contraejemplo.
    </p></li>
 
          <li permid="uaK"><p permid="xjL">Los cuantificadores son importantes. Palabras y frases como <em>único</em>, <em>para todos</em>, <em>para cada</em>, y <em>para algún</em> tienen significados diferentes.
    </p></li>
 
          <li permid="ahT"><p permid="dqU">Nunca suponga una hipótesis que no se da explícitamente en un teorema.  <em>No puede dar cosas por sabidas.</em></p></li>
 
           <li permid="Gpc"><p permid="Jyd">Supongamos que quiere mostrar que un objeto <em>existe</em> y es <em>único</em>.  Primero muestre que el objeto realmente existe.  Para demostrar que es único, supongamos que hay dos tales objetos, digamos <m>r</m> y <m>s</m>, y después demuestre que <m>r = s</m>.
    </p></li>
 
          <li permid="mwl"><p permid="pFm">A veces es más fácil demostrar el contrapositivo de una proposición.  Demostrar la proposición <q>Si <m>p</m>, entonces <m>q</m></q> es exactamente lo mismo que demostrar la proposición <q>Si no <m>q</m>, entonces no <m>p</m>.</q></p></li>
 
          <li permid="SDu"><p permid="VMv">Si bien usualmente es mejor encontrar una demostración directa de un teorema, esto puede ser difícil.  Podría ser más fácil suponer que el teorema que está tratando de demostrar es falso, y esperar que a lo largo de su argumento se vea obligado a deducir un enunciado que no pueda ser verdadero.
    </p></li>
 
        </ul>
      Recuerde que uno de los objetivos principales de las matemáticas superiores es demostrar teoremas. Los teoremas son herramientas que permiten nuevas y productivas aplicaciones de las matemáticas.  Usamos ejemplos para ilustrar teoremas existentes y para incentivar el desarrollo de la intuición sobre la razón de la posible veracidad de nuevos teoremas.  Aplicaciones, ejemplos y demostraciones están fuertemente interconectados<mdash/>mucho más de lo que puede parecer en primera instancia.
    </p>
 
    </subsection>

  </section>

  <section xml:id="sets-section-sets-and-equivalence-relations" permid="eYQ">
    <title>Conjuntos y Relaciones de Equivalencia</title>
 
    <subsection xml:id="sets-subsection-set-theory" permid="JqM">
      <title>Teoría de Conjuntos</title>
 
      <p permid="pcJ">Un <term>conjunto</term> es una colección bien-definida de objetos; es decir, está definida de manera que para un objeto <m>x</m> cualquiera, podamos determinar si <m>x</m> pertenece o no al conjunto.  Los objetos que pertenecen al conjunto se llaman <term>elementos</term> o <term>miembros</term>. Denotaremos los conjuntos por letras mayúsculas, tales como <m>A</m> o <m>X</m>; si <m>a</m> es un elemento del conjunto <m>A</m>, escribimos <m>a \in A</m>.
      <notation><usage><m>a \in A</m></usage><description><m>a</m> está en el conjunto <m>A</m></description></notation></p>

      <!--Todo Make notation table-->

      <p permid="VjS">Un conjunto usualmente se define ya sea listando todos los elementos que contiene entre un par de llaves o indicando la propiedad que determina si un objeto <m>x</m> pertenece o no al conjunto. Podemos escribir
        <me permid="hcL">X = \{ x_1, x_2, \ldots, x_n \}</me>
      para un conjunto que contiene los elementos <m>x_1, x_2, \ldots, x_n</m> o
        <me permid="NjU">X = \{ x :x \text{ satisface }{\mathcal P}\}</me>
      si cada <m>x</m> en <m>X</m> satisface cierta propiedad <m>{\mathcal P}</m>.  Por ejemplo, si <m>E</m> es el conjunto de enteros pares positivos, podemos describir <m>E</m> escribiendo ya sea
        <me permid="trd">E = \{2, 4, 6, \ldots \} \quad \text{o} \quad E = \{ x : x \text{ es un entero par y } x \gt 0 \}</me>.
      Escribimos <m>2 \in E</m> cuando queremos decir que 2 está en el conjunto <m>E</m>, y <m>-3 \notin E</m> para  decir que <m>-3</m> no está en el conjunto <m>E</m>.
    </p>

      <p permid="Brb">Algunos de los conjuntos más importantes que consideraremos son los siguientes: 
      <md permid="Zym">
        <mrow>{\mathbb N} = \{n: n \text{ es un número natural}\}  = \{1, 2, 3, \ldots \};</mrow>
        <mrow>{\mathbb Z} = \{n : n \text{ es un entero} \} = \{\ldots, -1, 0, 1,  2, \ldots \};</mrow>
        <mrow>{\mathbb Q} = \{r : r \text{ es un número racional}\} = \{p/q : p, q \in {\mathbb Z} \text{ con } q \neq 0\};</mrow>
        <mrow>{\mathbb R} = \{ x : x \text{ es un número real} \};</mrow>
        <mrow>{\mathbb C} = \{z : z \text{ es un número complejo}\}</mrow>
      </md>.

      <notation>
        <usage><m>{\mathbb N}</m></usage>
        <description>los número naturales</description>
      </notation>

      <notation>
        <usage><m>{\mathbb Z}</m></usage>
        <description>los números enteros</description>
      </notation>

      <notation>
        <usage><m>{\mathbb Q}</m></usage>
        <description>los números racionales</description>
      </notation>
      
      <notation>
        <usage><m>{\mathbb R}</m></usage>
        <description>los números reales</description>
      </notation>
      
      <notation>
        <usage><m>{\mathbb C}</m></usage>
        <description>los números complejos</description>
      </notation>
    
    </p>

      <p permid="hyk">Podemos encontrar varias relaciones entre conjuntos y realizar operaciones entre ellos.  Un conjunto <m>A</m> es un  <term>subconjunto</term> de <m>B</m>, denotado <m>A \subset B</m> o <m>B \supset A</m>, si todo elemento de <m>A</m> también es un elemento de <m>B</m>.  
        <notation><usage><m>A \subset B</m></usage>
          <description><m>A</m> es un subconjunto de <m>B</m></description></notation> Por ejemplo,  
        <me permid="FFv">\{4,5,8\} \subset \{2, 3, 4, 5, 6, 7, 8, 9 \}</me>
      y
        <me permid="lME">{\mathbb N} \subset {\mathbb Z} \subset {\mathbb Q} \subset {\mathbb R} \subset {\mathbb C}</me>.
      Trivialmente, todo conjunto es subconjunto de sí mismo.  Un conjunto <m>B</m> es un <term>subconjunto propio</term> de un conjunto <m>A</m> si <m>B \subset A</m> pero <m>B \neq A</m>. Si <m>A</m> no es un subconjunto de <m>B</m>, escribimos <m>A \notsubset B</m>; por ejemplo, <m>\{4, 7, 9\} \notsubset \{2, 4, 5,  8, 9 \}</m>.  Dos conjuntos son <term>iguales</term>, escrito <m>A = B</m>, si contienen los mismos elementos.  Esto es equivalente a que <m>A \subset B</m> y <m>B \subset A</m>.
    </p>

      <p permid="NFt">Es conveniente tener un conjunto sin elementos.  Este conjunto se llama <term>conjunto vacío</term> y se denota por <m>\emptyset</m>.  Notemos que el conjunto vacío es un subconjunto de todo conjunto. 
      
        <notation>
          <usage><m>\emptyset</m></usage>
          <description>el conjunto vacío</description>
        </notation>
      </p>    

      <p permid="tMC">Para construir conjuntos nuevos a partir de otros conjuntos, podemos realizar ciertas operaciones: la <term>unión</term> <m>A \cup B</m> de dos conjuntos <m>A</m> y <m>B</m> se define como
        <me permid="RTN">A \cup B = \{x : x \in A \text{ o } x \in B \};</me>
      la <term>intersección</term> de <m>A</m> y <m>B</m>  se define como
        <me permid="yaW">A \cap B = \{x :  x \in A \text{ y } x \in B \}</me>.
      <notation><usage><m>A \cup B</m></usage><description>la unión de los conjuntos <m>A</m>  y <m>B</m></description></notation><notation><usage><m>A \cap B</m></usage><description>la intersección de los conjuntos <m>A</m> y <m>B</m></description></notation> Si <m>A = \{1, 3, 5\}</m> y <m>B = \{ 1, 2, 3, 9 \}</m>, entonces
        <me permid="eif">A \cup B = \{1, 2, 3, 5, 9 \} \quad \text{y} \quad A \cap B = \{ 1, 3 \}</me>.
      Podemos considerar la unión y la intersección de más de dos conjuntos.  En este caso escribimos
        <me permid="Kpo">\bigcup_{i = 1}^{n} A_{i} = A_{1} \cup \ldots \cup A_n</me>
      y
        <me permid="qwx">\bigcap_{i = 1}^{n} A_{i} = A_{1} \cap \ldots \cap A_n</me>
      para la unión e intersección, respectivamente de los conjuntos <m>A_1, \ldots, A_n</m>.
    </p>



<!-- Added comma after \ldots - TWJ 12/16/2010 -->

      <p permid="ZTL">Cuando dos conjuntos no tienen elementos en común, se dice que son <term>disjuntos</term>; por ejemplo, si <m>P</m> es el conjunto de los enteros pares e <m>I</m> es el conjunto de los enteros impares, entonces <m>P</m> e <m>I</m> son disjuntos.  Dos conjuntos <m>A</m> y <m>B</m> son disjuntos precisamente cuando <m>A \cap B = \emptyset</m>.
    </p> 

      <p permid="GaU">En ocasiones trabajaremos con un conjunto fijo <m>U</m>, llamado <term>conjunto universal</term>.  Para cualquier conjunto <m>A \subset U</m>, podemos definir el <term>complemento</term> de <m>A</m>, denotado por <m>A'</m>, como el conjunto <notation><usage><m>A'</m></usage><description>complemento del conjunto <m>A</m></description></notation>
        <me permid="WDG">A' = \{ x : x \in U \text{ y } x \notin A \}</me>.
    </p>    

      <p permid="mid">Definimos la <term>diferencia</term> de dos conjuntos <m>A</m> y <m>B</m> como <notation><usage><m>A \setminus B</m></usage><description>diferencia entre los conjuntos <m>A</m> y <m>B</m></description></notation>
        <me permid="CKP">A \setminus B = A \cap B'  = \{ x : x \in A \text{ y } x \notin B \}</me>.
    </p>

    <example xml:id="sets-example-operations" permid="DBA">
      <p permid="gew">Sea <m>{\mathbb R}</m> el conjunto universal y supongamos que
        <me permid="iRY">A = \{ x \in {\mathbb R} : 0 \lt x \leq 3 \} \quad \text{y} \quad B = \{ x \in {\mathbb R} : 2 \leq x \lt 4 \}</me>.
      Entonces
        <md permid="OZh">
          <mrow>A \cap B &amp; =  \{ x \in {\mathbb R} : 2 \leq x \leq 3 \}</mrow>
          <mrow>A \cup B &amp; =  \{ x \in {\mathbb R} : 0 \lt x \lt 4 \}</mrow>
          <mrow>A \setminus B &amp; =  \{ x \in {\mathbb R} : 0 \lt x \lt 2  \}</mrow>
          <mrow>A' &amp; =  \{ x \in {\mathbb R} : x \leq 0 \text{ o } x \gt 3 \}</mrow>
        </md>.
    </p>
    </example>
 
    <proposition permid="Xur">
      <statement>
        <p permid="TQe">Sean <m>A</m>, <m>B</m>, y <m>C</m> conjuntos. Entonces
          <ol permid="Huv">
 
            <li permid="rge"><p permid="BTE"><m>A \cup A = A</m>, <m>A \cap A = A</m>, y <m>A \setminus A = \emptyset</m>;</p></li>
 

            <li permid="Xnn"><p permid="iaN"><m>A \cup \emptyset = A</m> y <m>A \cap \emptyset = \emptyset</m>;</p></li>

            <li permid="Duw"><p permid="OhW"><m>A \cup (B \cup C) = (A \cup B) \cup C</m> y  <m>A \cap (B \cap C) = (A \cap B) \cap C</m>;</p></li>
 
            <li permid="jBF"><p permid="upf"><m>A \cup B = B \cup A</m> y <m>A \cap B = B \cap A</m>;</p></li>
 
            <li permid="PIO"><p permid="awo"><m>A \cup (B \cap C) = (A \cup B) \cap (A \cup C)</m>;</p></li>
 
            <li permid="vPX"><p permid="GDx"><m>A \cap (B \cup C) = (A \cap B) \cup (A \cap C)</m>.
    </p></li>
 
          </ol></p>
      </statement>
      <proof permid="gsE">
        <p permid="tyh">Demostraremos (1) y (3) y dejaremos las demostraciones de los demás resultados como ejercicios.
    </p>

        <p permid="ZFq">(1) Observe que
          <md permid="vgq">
            <mrow>A \cup A &amp; =  \{ x :  x \in A \text{ o } x \in A \}</mrow>
            <mrow>&amp; =  \{ x : x \in A \}</mrow>
            <mrow>&amp; =  A</mrow>
          </md>
        y
          <md permid="bnz">
            <mrow>A \cap A &amp; =  \{ x : x \in A \text{ y } x \in A \}</mrow>
            <mrow>&amp; =  \{ x : x \in A  \}</mrow>
            <mrow>&amp; =  A</mrow>
          </md>.
        Además, <m>A \setminus A = A \cap A' = \emptyset</m>.
    </p>
 
        <p permid="FMz">(3) Para conjuntos <m>A</m>, <m>B</m>, y <m>C</m>,
          <md permid="HuI">
            <mrow>A \cup (B \cup C) &amp; = A \cup \{ x : x \in B \text{ o } x \in C \}</mrow>
            <mrow>&amp; = \{ x : x \in A \text{ o } x \in B, \text{ o } x \in C \}</mrow>
            <mrow>&amp; = \{ x : x \in A \text{ o } x \in B \} \cup C</mrow>
            <mrow>&amp; = (A \cup B) \cup C. </mrow>
          </md>
        Un argumento similar demuestra que <m>A \cap (B \cap C) = (A \cap B) \cap C</m>.
    </p>
      </proof>
    </proposition>

    <theorem permid="rni">
      <title>Leyes de De Morgan</title>
      <idx><h>Leyes de De Morgan </h><h>para conjuntos</h></idx>
      <statement>
        <p permid="vnu">Sean <m>A</m> y <m>B</m> conjuntos. Entonces 
          <ol permid="vgd">

            <li permid="bXg"><p permid="mKG"><m>(A \cup B)' = A' \cap B'</m>;</p></li>
 
            <li permid="Iep"><p permid="SRP"><m>(A \cap B)' = A' \cup B'</m>.
    </p></li>
 
          </ol></p>
      </statement>
      <proof permid="HPU">
        <p permid="lTI">(1) Si <m>A \cup B = \emptyset</m>, entonces el teorema es inmediato pues tanto <m>A</m> como <m>B</m> son el conjunto vacío. De otra manera, debemos mostrar que <m>(A \cup B)' \subset A' \cap B'</m> y <m>(A \cup B)' \supset A' \cap B'</m>. Sea <m>x \in (A \cup B)'</m>.  Entonces <m>x \notin A \cup B</m>. Así <m>x</m> no está en <m>A</m> ni en <m>B</m>, por la definición de la unión de conjuntos.  Por la definición del complemento, <m>x \in A'</m> y <m>x \in B'</m>.  Por lo tanto, <m>x \in A' \cap B'</m> y tenemos <m>(A \cup B)' \subset A' \cap B'</m>.
    </p>
 
        <p permid="SaR">Para mostrar la inclusión inversa, supongamos que <m>x \in A' \cap B'</m>.  Entonces <m>x \in A'</m> y <m>x \in B'</m>, y así <m>x \notin A</m> y <m>x \notin B</m>. Luego <m>x \notin A \cup B</m> y así <m>x \in (A \cup B)'</m>.  Por lo tanto, <m>(A \cup B)' \supset A' \cap B'</m> y así <m>(A \cup B)' = A' \cap B'</m>.
    </p>

        <p permid="yia">La demostración de (2) la dejamos como ejercicio.
    </p>
      </proof>
    </theorem>
 
    <example xml:id="sets-example-other-relations" permid="jIJ">
      <p permid="MlF">Otras relaciones entre conjuntos son por ejemplo,
        <me permid="nBR">( A \setminus B) \cap (B \setminus A) = \emptyset</me>.
      Para ver que esta es verdadera, observe que
        <md permid="TJa">
          <mrow>( A \setminus B) \cap (B \setminus A) &amp; = ( A \cap B') \cap (B \cap A')</mrow>
          <mrow>&amp; = A \cap A' \cap B \cap B'</mrow>
          <mrow>&amp; = \emptyset</mrow>
        </md>.
    </p>
    </example>
 
  </subsection>

  <subsection xml:id="sets-subsection-cartesian-products" permid="pxV">
    <title>Producto Cartesiano y Funciones</title>

      <p permid="Spm">Dados dos conjuntos <m>A</m> y <m>B</m>, podemos definir un nuevo conjunto <m>A \times B</m>, llamado <term>producto Cartesiano</term>  de <m>A</m> y <m>B</m>, como conjunto de pares ordenados.  Esto es, <notation><usage><m>A \times B</m></usage><description>producto Cartesiano de conjuntos <m>A</m> y <m>B</m></description></notation>
        <me permid="zQj">A \times B = \{ (a,b) : a \in A \text{ y } b \in B \}</me>.
    </p>

    <example xml:id="sets-example-cartesian-products" permid="cek">
      <p permid="ssO">Si <m>A = \{ x, y \}</m>, <m>B = \{ 1, 2, 3 \}</m>, y <m>C = \emptyset</m>, entonces <m>A \times B</m> es el conjunto 
        <me permid="fXs">\{ (x, 1), (x, 2), (x, 3), (y, 1), (y, 2), (y, 3) \}</me>
      y
        <me permid="MeB">A \times C = \emptyset</me>.
    </p>
    </example>

    <p permid="ywv">Definimos el <term>producto Cartesiano de <m>n</m> conjuntos</term> como
      <me permid="slK">A_1 \times \cdots \times A_n = \{ (a_1, \ldots, a_n): a_i \in A_i \text{ para } i = 1, \ldots, n \}</me>.
    Si <m>A = A_1 = A_2 = \cdots = A_n</m>, escribiremos <m>A^n</m> para <m>A \times \cdots \times A</m> (donde <m>A</m> se escribiría <m>n</m> veces).  <notation><usage><m>A^n</m></usage><description><m>A \times \cdots \times A</m> (<m>n</m> veces)</description></notation>Por ejemplo, el conjunto <m>{\mathbb R}^3</m> consiste de todas las  3-tuplas de números reales.
    </p>



    <p permid="eDE">Subconjuntos de <m>A \times B</m> se llaman <term>relaciones</term>.  Definiremos un <term>mapeo</term><idx><h>Mapeo</h><see>Función</see></idx> o <term>función</term><idx><h>Función</h><h>definición de</h></idx> <m>f \subset A \times B</m> de un conjunto <m>A</m> en un conjunto <m>B</m> como el tipo especial de relación donde <m>(a, b) \in f</m> si para todo elemento <m>a \in A</m> existe un único elemento <m>b \in B</m>. Otra forma de decir esto es que para cada elemento en <m>A</m>, <m>f</m> asigna un único elemento en <m>B</m>.  Usualmente escribimos <m>f:A \rightarrow B</m> o <m>A \stackrel{f}{\rightarrow} B</m>.  En lugar de escribir pares ordenados <m>(a,b) \in A \times B</m>, escribimos <m>f(a) = b</m> o <m>f : a \mapsto b</m>.  El conjunto <m>A</m> se llama <term>dominio</term><idx><h>Función</h><h>dominio de la</h></idx> de <m>f</m> y   
      <me permid="YsT">f(A) = \{ f(a) : a \in A \} \subset B</me>
    se llama <term>rango</term><idx><h>Función</h><h>rango de la</h></idx> o <term>imagen</term> de <m>f</m>.  Podemos pensar los elementos del dominio de una función como valores de entrada y los elementos del rango de la función como valores de salida.
    </p>


    <example xml:id="sets-example-mappings" permid="Ilt">
      <p permid="YzX">Supongamos <m>A = \{1, 2, 3 \}</m> y <m>B = \{a, b, c \}</m>.  En <xref ref="sets-figure-mappings"/> definimos las relaciones <m>f</m> y  <m>g</m> de <m>A</m> en <m>B</m>.  La relación <m>f</m> es una función, pero <m>g</m> no lo es pues a <m>1 \in A</m> no se le asigna una única imagen en <m>B</m>; es decir, <m>g(1) = a</m> y <m>g(1) = b</m>.
    </p>

      <figure xml:id="sets-figure-mappings" permid="EHg">
        <caption>Mappings and relations</caption>
          <!-- Changed the figure to a tikz diagram - TWJ 5/4/2010 -->
        <image width="60%" xml:id="sets-mappings" permid="JTP">
          <description>Two sets of ovals, A and B, relating 1, 2, 3 to a, b, c.  The first mapping, f, sends 1 to b and 2 and 3 to c.  The second relation, g, sends 1 to a and b, 2 to c, and 3 to a</description>
    
          <latex-image>
            <xi:include href="tikz/sets-mappings.tex" parse="text"/>
          </latex-image>
        </image>
          <!-- Changed the caption to avoid confusion -->
          <!--  Suggested by B. Torrence.  TWJ 10/1/2014 -->
        </figure>
    </example>

    <p permid="KKN">Dada una función <m>f : A \rightarrow B</m>, a veces es posible hacer una lista describiendo lo que le hace la función a cada elemento específico del dominio.  Pero no todas las funciones pueden ser descritas de esta manera.  Por ejemplo, la función  <m>f: {\mathbb R} \rightarrow {\mathbb R}</m> que envía a cada número real en su cubo es una función que debe ser descrita escribiendo <m>f(x) = x^3</m> o <m>f:x \mapsto x^3</m>.
    </p>
 
    <p permid="qRW">Considere la relación <m>f : {\mathbb Q} \rightarrow {\mathbb Z}</m> dada por <m>f(p/q) = p</m>.  Sabemos que <m>1/2 = 2/4</m>, pero es <m>f(1/2) = 1</m> o <m>2</m>?  Esta relación no puede ser una función pues no está bien-definida.  Una relación está <term>bien-definida</term><idx><h>función bien-definida</h></idx> si a cada elemento en el dominio se le asigna un <em>único</em> elemento en el rango.
    </p>

    <p permid="WZf">Si <m>f:A \rightarrow B</m> es una función y la imagen de <m>f</m> es <m>B</m>, es decir, <m>f(A) = B</m>, entonces <m>f</m> se dice <term>sobre</term><idx><h>Función</h><h>sobre</h></idx> o <idx><h>Función</h><h>sobreyectiva</h></idx><term>sobreyectiva</term>. En otras palabras, si para cada <m>b \in B</m> existe <m>a \in A</m> tal que <m>f(a) = b</m>, entonces <m>f</m> es sobre. Una función es <term>1-1</term><idx><h>Función</h><h>1-1</h></idx> o <term>inyectiva</term><idx><h>Función</h><h>inyectiva</h></idx> si <m>a_1 \neq a_2</m> implica <m>f(a_1) \neq f(a_2)</m>.  Equivalentemente, una función es 1-1 si <m>f(a_1) = f(a_2)</m> implica <m>a_1 = a_2</m>.  Una función que es 1-1 y sobre se llama <idx><h>Función</h><h>biyectiva</h></idx><term>biyectiva</term>.
    </p> 

<!-- Added explanation for onto map - TWJ 1/25/2011 -->

    <example xml:id="sets-example-one-to-one-onto" permid="osC">
      <p permid="kOp">Sea <m>f:{\mathbb Z} \rightarrow {\mathbb Q}</m> definida como <m>f(n) = n/1</m>.  Entonces <m>f</m> es 1-1 pero no sobre.  Defina <m>g : {\mathbb Q} \rightarrow {\mathbb Z}</m> como <m>g(p/q) = p</m> donde <m>p/q</m> es un número racional en su forma reducida con denominador positivo.  La función <m>g</m> es sobre pero no 1-1.
    </p>
    </example>

    <p permid="Dgo">Dadas dos funciones, podemos construir una nueva función usando el rango de la primera función como el dominio de la segunda.  Sean <m>f : A \rightarrow B</m> y <m>g : B \rightarrow C</m> funciones.  Definimos una nueva función, la <term>composición</term><idx><h>Función</h><h>composición de</h></idx> de <m>f</m> y <m>g</m> de <m>A</m> en <m>C</m>, como <m>(g \circ f)(x) = g(f(x))</m>.
    </p>

    <figure xml:id="sets-figure-composition" permid="PuG">
      <caption>Composición de funciones</caption>

      <!-- Changed the figure to a tikz diagram - TWJ 5/4/2010 -->
      <image width="90%" xml:id="sets-composition" permid="qaY">
        <description>Two sets of ovals, A and B, relating 1, 2, 3 to a, b, c and a, b, c to X, Y, Z.  The first mapping, f, sends 1 to b, 2  2 to c, and 3 to a.  The second relation, g, sends a and b to Z and c to X.  The bottom map, g circle f, sends 1 and 3 to Z and 2 to X. </description>
          <latex-image>
            <xi:include href="tikz/sets-composition.tex" parse="text"/>
          </latex-image>
        </image>
    </figure>

    <example xml:id="sets-example-composition" permid="UzL">
      <p permid="QVy">Considere las funciones <m>f: A \rightarrow B</m> y <m>g: B \rightarrow C</m> que están definidas en <xref ref="sets-figure-composition"/> (arriba).  La composición de estas funciones, <m>g \circ f: A \rightarrow C</m>, está definida en <xref ref="sets-figure-composition"/> (abajo).
    </p>
    </example>

<!-- Changed figure references.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->

    <example xml:id="sets-example-composition-noncommute" permid="AGU">
      <p permid="xcH">Sean <m>f(x) = x^2</m> y <m>g(x) = 2x + 5</m>. Entonces
        <me permid="EAc">(f \circ g)(x) = f(g(x)) = (2x + 5)^2 = 4x^2 + 20x + 25</me>
      y
        <me permid="kHl">(g \circ f)(x) = g(f(x)) = 2x^2 + 5</me>.
      En general, el orden importa; es decir, en la mayoría de los casos <m>f \circ g \neq g \circ f</m>.
    </p>
    </example>
 
    <example xml:id="sets-example-composition-commute" permid="MVm">
      <p permid="djQ">A veces se cumple que <m>f \circ g= g \circ f</m>.  Sean <m>f(x) = x^3</m> y <m>g(x) = \sqrt[3]{x}</m>. Entonces 
        <me permid="QOu">(f \circ g )(x) = f(g(x)) = f( \sqrt[3]{x}\, ) = (\sqrt[3]{x}\, )^3 = x</me>
      y
        <me permid="wVD">(g \circ f )(x) = g(f(x)) = g( x^3) = \sqrt[3]{ x^3} = x</me>.
    </p>
    </example>
 
    <example xml:id="sets-example-linear-map" permid="tcv">
      <p permid="JqZ">Dada  una matriz de <m>2 \times 2</m>
        <me permid="dcM">A =
        \begin{pmatrix}
        a &amp; b \\
        c &amp; d
        \end{pmatrix}</me>,
      podemos definir una función <m>T_A : {\mathbb R}^2 \rightarrow {\mathbb R}^2</m> como 
        <me permid="JjV">T_A (x,y) = (ax + by, cx +dy)</me>
      para <m>(x,y)</m> en <m>{\mathbb R}^2</m>.  Esto en realidad es multiplicación de matrices; es decir,
        <me permid="pre">\begin{pmatrix}
        a &amp; b \\
        c &amp; d
        \end{pmatrix}
        \begin{pmatrix}
        x \\ y
        \end{pmatrix}
        =
        \begin{pmatrix}
        ax + by \\
        cx +dy
        \end{pmatrix}</me>.
      Funciones de <m>{\mathbb R}^n</m> en <m>{\mathbb R}^m</m> dadas por matrices se llaman <term>funciones lineales</term> o <idx><h>Transformación lineal</h><h>definición de</h></idx><term>transformaciones lineales</term>.
    </p>
    </example>

    <example xml:id="sets-example-permutation" permid="ZjE">
      <p permid="pyi">Supongamos que <m>S = \{ 1,2,3  \}</m>. Definamos una función <m>\pi :S\rightarrow S</m> como 
        <me permid="Vyn">\pi( 1 )  = 2, \qquad \pi( 2 )  = 1, \qquad \pi( 3 )  = 3</me>.
      Esta es una función biyectiva.  Una forma alternativa de escribir <m>\pi</m> es
        <me permid="BFw">\begin{pmatrix}
        1 &amp; 2 &amp; 3 \\
        \pi(1) &amp; \pi(2) &amp; \pi(3)
        \end{pmatrix}
        =
        \begin{pmatrix}
        1 &amp; 2 &amp; 3 \\
        2 &amp; 1 &amp; 3
        \end{pmatrix}</me>.
      Para cualquier conjunto <m>S</m>, una función biyectiva <m>\pi : S \rightarrow S</m> se llama <term>permutación</term><idx><h>Permutación</h><h>definición de</h></idx> de <m>S</m>.
    </p>
    </example>

    <theorem permid="PPS">
      <statement>
        <p permid="buD">Sean <m>f : A \rightarrow B</m>, <m>g : B \rightarrow C</m>, y <m>h : C \rightarrow D</m>. Entonces  
          <ol permid="bnm">
 
            <li permid="oly"><p permid="yYY">La composición de funciones es asociativa; es decir, <m>(h \circ g) \circ f = h \circ (g \circ f)</m>;</p></li>  
 
            <li permid="UsH"><p permid="fgh">Si <m>f</m> y <m>g</m> son ambas 1-1, entonces la función <m>g \circ f</m> es 1-1;</p></li> 
 
            <li permid="AzQ"><p permid="Lnq">Si <m>f</m> y <m>g</m> son ambas sobre, entonces la función <m>g \circ f</m> es sobre;</p></li>

            <li permid="gGZ"><p permid="ruz">Si <m>f</m> y <m>g</m> son ambas biyectivas, entonces la función <m>g \circ f</m> es biyectiva;</p></li>
 
          </ol></p>
      </statement>
      <proof permid="nXd">
        <p permid="epj">Demostraremos (1) y (3). La parte (2) se deja como ejercicio.  La parte (4) es consecuencia directa de (2) y (3).
    </p> 
 
        <p permid="Kws">(1) Debemos mostrar que
          <me permid="hMF">h \circ (g \circ f) = (h \circ g) \circ f</me>.
        Para <m>a \in A</m> tenemos
          <md permid="NTO">
            <mrow>(h \circ (g \circ f))(a) &amp; = h((g \circ f)(a))</mrow>
            <mrow>&amp; = h(g(f(a))) </mrow>
            <mrow>&amp; = (h \circ g)(f(a))</mrow>
            <mrow>&amp; = ((h \circ g) \circ f)(a)</mrow>
        </md>.
    </p>
 
        <p permid="qDB">(3) Supongamos que <m>f</m> y <m>g</m> son ambas sobreyectivas. Dado <m>c \in C</m>, debemos mostrar que existe <m>a \in A</m> tall que <m>(g \circ f)(a) = g(f(a)) = c</m>. Pero, como <m>g</m> es sobre, existe <m>b \in B</m> tal que <m>g(b) = c</m>. Similarmente, existe <m>a \in A</m> tal que <m>f(a) = b</m>. Por ende, 
          <me permid="uaX">(g \circ f)(a) = g(f(a)) = g(b) = c</me>.
    </p>
      </proof>
    </theorem>
 
       <p permid="jnx">Si <m>S</m> es cualquier conjunto, usaremos <m>id_S</m> o <m>id</m> para denotar a la <term>función identidad</term><idx><h>Función</h><h>identidad</h></idx> de <m>S</m> en sí mismo.  Definimos esta función como <m>id(s) = s</m> para todo <m>s \in S</m>.  Una función <m>g: B \rightarrow A</m> es una <term>función inversa</term> de <m>f: A \rightarrow B</m> si <m>g \circ f = id_A</m> y <m>f \circ g = id_B</m>; en otras palabras, la función inversa de una función simplemente <q>deshace</q> lo que hace la función.   Una función se dice <term>invertible</term><idx><h>Función</h><h>invertible</h></idx> si tiene una inversa.  Usualmente escribimos <m>f^{-1}</m> para la inversa de <m>f</m>. <notation><usage><m>id</m></usage><description>función identidad</description></notation><notation><usage><m>f^{-1}</m></usage><description>inversa de la función <m>f</m></description></notation></p> 

    <example xml:id="sets-example-inverse-function" permid="FqN">
      <p permid="VFr">La función <m>f(x) = x^3</m> tiene inversa <m>f^{-1}(x) = \sqrt[3]{x}</m> por <xref ref="sets-example-composition-commute"/>.
    </p>
    </example>

    <example xml:id="sets-example-exponential" permid="lxW">
      <p permid="BMA">El logaritmo natural y la función exponencial, <m>f(x) = \ln x</m> y <m>f^{-1}(x) = e^x</m>, son inversas, la una de la otra, con tal de que seamos cuidadosos en la elección de los dominios.  Observe que  
        <me permid="aig">f(f^{-1}(x)) = f(e^x) = \ln e^x = x</me>
      y
        <me permid="Gpp">f^{-1}(f(x)) = f^{-1}(\ln x) = e^{\ln x} = x</me>
      siempre que la composición tenga sentido.
    </p>
    </example>

    <example xml:id="sets-example-inverse-matrix" permid="RFf">
      <p permid="hTJ">Supongamos que
          <me permid="mwy">A =
          \begin{pmatrix}
          3 &amp; 1 \\
          5 &amp; 2
          \end{pmatrix}</me>.
        Entonces <m>A</m> define una función de <m>{\mathbb R}^2</m> en <m>{\mathbb R}^2</m> como
          <me permid="SDH">T_A (x,y) = (3x +  y, 5x + 2y)</me>.
        Podemos encontrar la función inversa de <m>T_A</m> simplemente invirtiendo la matriz <m>A</m>; es decir, <m>T_A^{-1} = T_{A^{-1}}</m>. En este ejemplo,
          <me permid="yKQ">A^{-1} =
          \begin{pmatrix}
          2  &amp; -1 \\
          -5 &amp;  3
          \end{pmatrix};</me>
        luego, la función inversa está dada por
          <me permid="eRZ">T_A^{-1} (x,y) = (2x -  y, -5x + 3y)</me>.
        Es fácil verificar que
          <me permid="KZi">T^{-1}_A \circ T_A (x,y) = T_A \circ T_A^{-1} (x,y) = (x,y)</me>.
        No toda función tiene inversa.  Si consideramos la función
          <me permid="rgr">T_B (x,y) = (3x , 0 )</me>
        dada por la matriz
          <me permid="XnA">B =
          \begin{pmatrix}
          3 &amp; 0 \\
          0 &amp; 0
          \end{pmatrix}</me>,
        una función inversa tendría que ser de la forma
          <me permid="DuJ">T_B^{-1} (x,y) = (ax + by, cx +dy)</me>
        y
          <me permid="jBS">(x,y) = T \circ T_B^{-1} (x,y) = (3ax + 3by, 0)</me>
        para todo <m>x</m> e <m>y</m>.  Claramente esto es imposible pues <m>y</m> podría no ser <m>0</m>.
    </p>
    </example>

    <example xml:id="sets-example-inverse-permutation" permid="xMo">
      <p permid="OaS">Dada la permutación
        <me permid="PJb">\pi =
        \begin{pmatrix}
        1 &amp; 2 &amp; 3 \\
        2 &amp; 3 &amp; 1
        \end{pmatrix}</me>
      en <m>S = \{ 1,2,3 \}</m>, es fácil ver que la permutación definida por
        <me permid="vQk">\pi^{-1} =
        \begin{pmatrix}
        1 &amp; 2 &amp; 3 \\
        3 &amp; 1 &amp; 2
        \end{pmatrix}</me>
      es la inversa de <m>\pi</m>.  De hecho, toda función biyectiva posee una inversa, como veremos en el próximo teorema.
    </p>
    </example>
 
    <theorem permid="vXb">
      <statement>
        <p permid="HBM">Una función es invertible si y solo si es biyectiva.
    </p>
      </statement>
      <proof permid="Uem">
        <p permid="WKK">Supongamos primero que <m>f:A \rightarrow B</m> es invertible con inversa <m>g: B \rightarrow A</m>. Entonces <m>g \circ f = id_A</m> es la función identidad; es decir, <m>g(f(a)) = a</m>. Si <m>a_1, a_2 \in A</m> con <m>f(a_1) = f(a_2)</m>, entonces <m>a_1 = g(f(a_1)) = g(f(a_2)) = a_2</m>.  Así, <m>f</m> es 1-1.  Ahora supongamos que <m>b \in B</m>. Para mostrar que <m>f</m> es sobre, es necesario encontrar <m>a \in A</m> tal que <m>f(a) = b</m>, pero <m>f(g(b)) = b</m> con <m>g(b) \in A</m>. Sea <m>a = g(b)</m>.
    </p>

        <p permid="CRT">Recíprocamente, sea <m>f</m> una función biyectiva y sea <m>b \in B</m>.  Como <m>f</m> es sobre, existe <m>a \in A</m> tal que <m>f(a) = b</m>.  Como <m>f</m> es 1-1, <m>a</m> es único. Defina <m>g</m> como <m>g(b) = a</m>.  Hemos construído la inversa de <m>f</m>.
    </p>
      </proof>
    </theorem>

    </subsection>

    <subsection xml:id="sets-subsection-equivalence-relations" permid="VFe">
      <title>Relaciones de Equivalencia y Particiones</title>

      <p permid="vBP">Una noción fundamental en matemáticas es la de igualdad.  Podemos generalizar la igualdad por medio de las relaciones de equivalencia y las clases de equivalencia.  Una <term>relación de equivalencia</term><idx><h>Relación de equivalencia</h></idx> en un conjunto <m>X</m> es una relación <m>R \subset X \times X</m> tal que  
        <ul permid="wVq">
 
          <li permid="yKD"><p permid="XBI"><m>(x, x) \in R</m> para todo <m>x \in X</m> (<term>propiedad refleja</term>);</p></li>
  
          <li permid="eRM"><p permid="DIR"><m>(x, y) \in R</m> implica <m>(y, x) \in R</m> (<term>propiedad simétrica</term>);</p></li>
 
          <li permid="KYV"><p permid="jQa"><m>(x, y)</m> y <m>(y, z) \in R</m> implica <m>(x, z) \in R</m> (<term>propiedad transitiva</term>).
    </p></li>
 
      </ul>Dada una relación de equivalencia <m>R</m>  en un conjunto <m>X</m>, usualmente escribiremos  <m>x \sim y</m> en lugar de <m>(x, y) \in R</m>. Si la relación de equivalencia ya tiene asociada una notación como <m>=</m>, <m>\equiv</m>, o <m>\cong</m>, usaremos esa notación.
    </p>

      <example xml:id="sets-example-equivalent-fractions" permid="qhP">
        <p permid="uib">Sean <m>p</m>, <m>q</m>, <m>r</m>, y <m>s</m> enteros, con <m>q</m> y <m>s</m> distintos de cero.  Definimos <m>p/q \sim r/s</m> si <m>ps = qr</m>.  Claramente <m>\sim</m> es refleja y simétrica.  Para mostrar que también es transitiva, supongamos que <m>p/q \sim r/s</m> y <m>r/s \sim t/u</m>, con <m>q</m>, <m>s</m>, y <m>u</m> todos distintos de cero.  Entonces <m>ps = qr</m> y <m>ru = st</m>. Por lo tanto, 
          <me permid="bXt">psu = qru = qst</me>.
        Como <m>s \neq 0</m>, <m>pu = qt</m>. Así, <m>p/q \sim t/u</m>.
    </p>
      </example>

      <example xml:id="sets-example-equivalent-derivative" permid="WoY">
        <p permid="apk">Supongamos que <m>f</m> y <m>g</m> son funciones diferenciables en <m>{\mathbb R}</m>.  Podemos definir una relación de equivalencia en el conjunto de tales funciones definiendo <m>f(x) \sim g(x)</m> si <m>f'(x) = g'(x)</m>. Es claro que <m>\sim</m> es refleja y simétrica.  Para demostrar la transitividad, supongamos que <m>f(x) \sim g(x)</m> y  <m>g(x) \sim h(x)</m>.  De cálculo sabemos que <m>f(x) - g(x) = c_1</m> y <m>g(x)- h(x) = c_2</m>, donde <m>c_1</m> y <m>c_2</m> son ambos constantes. Luego, 
          <me permid="IeC">f(x) - h(x) = ( f(x) - g(x)) + ( g(x)- h(x))  = c_1 - c_2</me>
        y <m>f'(x) - h'(x) = 0</m>. Por lo tanto, <m>f(x) \sim h(x)</m>.
    </p>
      </example>

      <example xml:id="sets-example-equivalent-circles" permid="Cwh">
        <p permid="Gwt">Para <m>(x_1, y_1 )</m> y <m>(x_2, y_2)</m> en <m>{\mathbb R}^2</m>, definamos <m>(x_1, y_1 ) \sim (x_2, y_2)</m> si <m>x_1^2 + y_1^2 = x_2^2 + y_2^2</m>.  Entonces <m>\sim</m> es una relación de equivalencia en <m>{\mathbb R}^2</m>.
    </p>
      </example>

      <example xml:id="sets-example-equivalent-matrices" permid="iDq">
        <p permid="mDC">Sean <m>A</m> y <m>B</m> matrices de <m>2 \times 2</m> con coeficientes reales. Podemos definir una relación de equivalencia en el conjunto de la matrices de <m>2 \times 2</m>, diciendo que <m>A \sim B</m> si existe una matriz invertible  <m>P</m> tal que <m>PAP^{-1} = B</m>.  Por ejemplo, si 
          <me permid="olL">A =
          \begin{pmatrix}
          1 &amp; 2 \\
          -1 &amp; 1
          \end{pmatrix}
          \quad \text{y} \quad
          B =
          \begin{pmatrix}
          -18 &amp; 33 \\
          -11 &amp; 20
          \end{pmatrix}</me>,
        entonces <m>A \sim B</m> pues <m>PAP^{-1} = B</m> para
          <me permid="UsU">P =
          \begin{pmatrix}
          2 &amp; 5 \\
          1 &amp; 3
          \end{pmatrix}</me>.
          Sea <m>I</m> la matriz identidad de <m>2 \times 2</m>; es decir,
          <me permid="AAd">I =
          \begin{pmatrix}
          1 &amp; 0 \\
          0 &amp; 1
          \end{pmatrix}</me>.
        Entonces <m>IAI^{-1} = IAI = A</m>; por lo tanto, la relación es refleja.  Para demostrar simetría, supongamos que <m>A \sim B</m>.  Entonces existe una matriz invertible <m>P</m> tal que <m>PAP^{-1} = B</m>.  Así 
          <me permid="gHm">A = P^{-1} B P = P^{-1} B (P^{-1})^{-1}</me>.
        Finalmente, supongamos que <m>A \sim B</m> y <m>B \sim C</m>.  Entonces existen matrices <m>P</m> y <m>Q</m> tales que <m>PAP^{-1} = B</m> y  <m>QBQ^{-1} = C</m>.  Como 
          <me permid="MOv">C = QBQ^{-1} = QPAP^{-1} Q^{-1} = (QP)A(QP)^{-1}</me>,
        la relación es transitiva.  Dos matrices equivalente de esta forma se dicen <idx><h>Matrices</h><h>similares</h></idx><term>similares</term>.
    </p>
      </example>

      <p permid="bIY">Una <term>partición</term><idx><h>Partición</h></idx> <m>{\mathcal P}</m> de un conjunto <m>X</m> es una colección de conjuntos no vacíos <m>X_1, X_2, \ldots</m> tales que <m>X_i \cap X_j = \emptyset</m> para <m>i  \neq j</m> y <m>\bigcup_k X_k = X</m>. Sea <m>\sim</m> una relación de equivalencia en un conjunto <m>X</m> y sea <m>x \in X</m>.  Entonces <m>[x] = \{ y \in X : y \sim x \}</m> se llama <term>clase de equivalencia</term><idx><h>Clase de equivalencia</h></idx> de <m>x</m>.  Veremos que una relación de equivalencia da lugar a una partición vía clases de equivalencia.  Además, si tenemos una partición de un conjunto, entonces existe una relación de equivalencia subyacente, como demuestra el teorema siguiente.
    </p>  
 
      <theorem permid="dTx">
        <statement>
          <p permid="nIV">Dada una relación de equivalencia <m>\sim</m> en un conjunto <m>X</m>, las clases de equivalencia de <m>X</m> forman una partición de <m>X</m>.  Recíprocamente, si <m>{\mathcal P} = \{ X_i\}</m> es una partición de un conjunto <m>X</m>, entonces existe una relación de equivalencia en <m>X</m> con clases de equivalencia <m>X_i</m>. </p>
        </statement>
        <proof permid="Alv">
          <p permid="iZc">Supongamos que existe una relación de equivalencia <m>\sim</m> en el conjunto <m>X</m>.  Para cualquier <m>x \in X</m>, la propiedad refleja muestra que <m>x \in [x]</m> de manera que <m>[x]</m> no es vacío.  Claramente <m>X = \bigcup_{x \in X} [x]</m>.  Sean <m>x, y \in X</m>. Debemos probar que ya sea <m>[x] = [y]</m> o <m>[x] \cap [y] = \emptyset</m>.  Supongamos que la intersección de <m>[x]</m> y <m>[y]</m> no es vacía y que <m>z \in [x] \cap [y]</m>. Entonces <m>z \sim x</m> y <m>z \sim y</m>.  Por simetría o por transitividad <m>x \sim y</m>; luego, <m>[x] \subset [y]</m>.  Similarmente, <m>[y] \subset [x]</m> y  así <m>[x] = [y]</m>.  Por lo tanto, dos clases de equivalencia pueden ser disjuntas o exactamente la misma.
    </p>
 
          <p permid="Pgl">Recíprocamente, supongamos que <m>{\mathcal P} = \{X_i\}</m> es una partición de un conjunto <m>X</m>.  Definamos que dos elementos son equivalentes si y solo si están en el mismo conjunto de la partición.  Claramente, la relación es refleja.  Si <m>x</m> está en el mismo conjunto que <m>y</m>, entonces <m>y</m> está en el mismo conjunto que <m>x</m>, así <m>x \sim y</m> implica <m>y \sim x</m>.  Finalmente, si <m>x</m> está en el mismo conjunto que <m>y</m> e <m>y</m> está en el mismo conjunto que <m>z</m>, entonces <m>x</m> debe estar en el mismo conjunto que <m>z</m>, por lo que tenemos transitividad.
    </p>
        </proof>
      </theorem>

      <corollary permid="KaG">
        <statement>
          <p permid="zXn">Dos clases de equivalencia en una relación de equivalencia ya sea son disjuntas o son iguales.
    </p>
        </statement>
      </corollary>
 
      <p permid="HQh">Examinemos algunas de las particiones dadas por las clases de equivalencia de los últimos ejemplos.
    </p> 

      <example xml:id="sets-example-fraction-partition" permid="OKz">
        <p permid="SKL">En la relación de equivalencia del <xref ref="sets-example-equivalent-fractions"/>, dos pares de enteros, <m>(p,q)</m> y <m>(r,s)</m>, están en la misma clase de equivalencia cuando se reducen a la misma fracción reducida.
    </p>
      </example>
 
      <example xml:id="sets-example-matrix-partition" permid="uRI">
        <p permid="yRU">En la relación de equivalencia en el <xref ref="sets-example-equivalent-derivative"/>, dos funciones <m>f(x)</m> y <m>g(x)</m> están en la misma clase cuando difieren por una constante.
    </p>
      </example>

      <example xml:id="sets-example-circle-partition" permid="aYR">
        <p permid="eZd">Hemos definido una clase de equivalencia en <m>{\mathbb R}^2</m> por <m>(x_1, y_1 ) \sim (x_2, y_2)</m> si <m>x_1^2 + y_1^2 = x_2^2 + y_2^2</m>.  Dos pares de números reales están en la misma clase cuando representan puntos en una misma circunferencia centrada en el origen.
    </p>
      </example>
 
      <example xml:id="sets-example-congruent-integers" permid="Hga">
        <p permid="Lgm">Sean <m>r</m> y <m>s</m> dos enteros y supongamos que <m>n \in {\mathbb N}</m>.  Diremos que <m>r</m> es <term>congruente</term><idx><h>Congruencia módulo <m>n</m></h></idx> a <m>s</m> <term>módulo</term> <m>n</m>, o <m>r</m> es congruente a <m>s</m> mód <m>n</m>, si <m>r - s</m> es divisible por <m>n</m>; es decir, <m>r - s = nk</m>  para algún <m>k \in {\mathbb Z}</m>.  En este caso escribimos <m>r \equiv s \pmod{n}</m>.  
          <notation>
            <usage><m>a \equiv b \pmod{n}</m></usage>
            <description><m>a</m> es congruente a <m>b</m> módulo <m>n</m></description>
          </notation>  
          
          Por ejemplo, <m>41 \equiv 17 \pmod{ 8}</m> pues <m>41 - 17=24</m> es divisible por <m>8</m>.  Afirmamos que congruencia módulo <m>n</m> es una relación de equivalencia en <m>{\mathbb Z}</m>.  Ciertamente cualquier entero <m>r</m> es equivalente a sí mismo pues <m>r - r = 0</m> es divisible por <m>n</m>.  Mostraremos ahora que la relación es simétrica.  Si <m>r \equiv s \pmod{ n}</m>, entonces <m>r - s = -(s -r)</m> es divisible por <m>n</m>. Así <m>s - r</m> es divisible por <m>n</m> y <m>s \equiv r \pmod{ n}</m>.  Ahora supongamos que <m>r \equiv s \pmod{ n}</m> y <m>s \equiv t \pmod{ n}</m>.  Entonces existen enteros <m>k</m> y <m>l</m> tales que <m>r -s = kn</m> y <m>s - t = ln</m>.  Para mostrar la transitividad, es necesario probar que <m>r - t</m> es divisible por <m>n</m>.  Pero,   
          <me permid="sVE">r - t = r - s + s - t = kn + ln = (k + l)n</me>,
        y así <m>r - t</m> es divisible por <m>n</m>.
    </p>


 
        <p permid="rnv">Si consideramos la relación de equivalencia establecida por los enteros módulo <m>3</m>, entonces 
          <md permid="ZcN">
            <mrow>{[0]} &amp; = \{ \ldots, -3, 0, 3, 6, \ldots \},</mrow>
            <mrow>{[1]} &amp; = \{ \ldots, -2, 1, 4, 7, \ldots \},</mrow>
            <mrow>{[2]} &amp; = \{ \ldots, -1, 2, 5, 8, \ldots \}</mrow>
          </md>.
        Note que <m>[0] \cup [1] \cup [2] = {\mathbb Z}</m> y también que los conjuntos son disjuntos.  Los conjuntos <m>[0]</m>, <m>[1]</m>, y <m>[2]</m> forman una partición de los enteros.
    </p>

        <p permid="XuE">Los enteros módulo <m>n</m> son ejemplos importantes en el estudio del álgebra abstracta y serán muy útiles en el estudio de diversas estructuras algebraicas tales como grupos y anillos.  En nuestra discusión de los enteros módulo <m>n</m> hemos asumido un resultado conocido como algoritmo de división, que será enunciado y demostrado en el <xref ref="integers"/>.
    </p>
      </example>
      <paragraphs component="sage-blurb">
        <title>Sage</title>
        <p>
          Sage es un potente sistema de código abierto para cálculos matemáticos exactos, numéricos y simbólicos.
Las versiones electrónicas de este texto contienen introducciones completas al uso de Sage para estudiar álgebra abstracta e incluyen un conjunto de ejercicios.
Estos se pueden encontrar en el sitio web del libro.
Debido al formato de esta versión del texto, al final de cada capítulo solo hemos incluido breves sugerencias sobre cómo se podría emplear Sage.
        </p>
        </paragraphs>
    </subsection>
  </section>
 
  <reading-questions permid="ibN">

    <exercise permid="Kix">
      <statement>
      <p permid="OSq">
        ¿Qué tienen en común las relaciones y las funciones?
      </p>
      </statement>
      <response/>
    </exercise>
  
    <exercise permid="qpG">
      <statement>
      <p permid="uZz">
        ¿Qué hace que las relaciones y las funciones sean diferentes?
      </p>
      </statement>
      <response/>
    </exercise>
  
    <exercise permid="WwP">
      <statement>
      <p permid="bgI">
        Exprese cuidadosamente las tres propiedades que definen una relación de equivalencia.
En otras palabras, no se limite a <em>nombrar</em> las propiedades, proporcione sus definiciones.
      </p>
      </statement>
      <response/>
    </exercise>
  
    <exercise permid="CDY">
      <statement>
      <p permid="HnR">
        ¿Cuál es la principal característica de las relaciones de equivalencia? (Pista: Particiones.)
      </p>
      </statement>
      <response/>
    </exercise>
  
    <exercise permid="iLh">
      <statement>
      <p permid="nva">
        Describa una técnica general para demostrar que dos conjuntos son iguales.
      </p>
      </statement>
      <response/>
    </exercise>
  
    </reading-questions>
  <!-- Exercises with Solutions  -->
    <!-- File: sets.xml  -->
    <!-- Title: Preliminaries -->
  <exercises xml:id="sets-exercises" filenamebase="sets" permid="mDp">
    <title>Ejercicios</title>
  
    <exercise number="1" permid="nnj" xml:id="sets-exercise-set-operations">
      <statement>
        <p permid="AHh">Supongamos que
          <md permid="FjW">
            <mrow>A &amp; = \{ x : x \in \mathbb N \text{ y } x \text{ es par} \},</mrow>
            <mrow>B &amp; = \{x : x \in \mathbb N \text{ y } x \text{ es primo}\},</mrow>
            <mrow>C &amp; = \{ x : x \in \mathbb N \text{ y } x \text{ es un múltiplo de 5}\}</mrow>
          </md>.
        Describa cada uno de ls siguientes conjuntos.
          <ol cols="2" permid="TIN">
  
            <li permid="MOi"><p permid="PXj"><m>A \cap B</m></p></li>
  
            <li permid="sVr"><p permid="wes"><m>B \cap C</m></p></li>
  
            <li permid="ZcA"><p permid="clB"><m>A \cup B</m></p></li>
  
            <li permid="FjJ"><p permid="IsK"><m>A \cap (B \cup C)</m></p></li>
  
          </ol></p>
      </statement>
      <hint permid="sGW">
        <p permid="rIU">(a) <m>A \cap B = \{ 2 \}</m>; (b) <m>B \cap C = \{ 5 \}</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="2" permid="Tus" xml:id="sets-exercise-set-operations-empty-set">
      <statement>
        <p permid="gOq">Si <m>A = \{ a, b, c \}</m>, <m>B = \{ 1, 2, 3 \}</m>, <m>C = \{ x \}</m>, y <m>D = \emptyset</m>, liste todos los elementos en cada uno de los siguientes conjuntos.
          <ol cols="2" permid="zPW">
  
            <li permid="JTC"><p permid="NcD"><m>A \times B</m></p></li>
  
            <li permid="qaL"><p permid="tjM"><m>B \times A</m></p></li>
  
            <li permid="WhU"><p permid="ZqV"><m>A \times B \times C</m></p></li>
  
            <li permid="Cpd"><p permid="Fye"><m>A \times D</m></p></li>
  
          </ol></p>
      </statement>
      <hint permid="EVo">
        <p permid="XQd">(a) <m>A \times B = \{ (a,1), (a,2), (a,3), (b,1), (b,2), (b,3), (c,1), (c,2), (c,3) \}</m>; (d) <m>A \times D = \emptyset</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="3" permid="zBB" xml:id="sets-exercise-cartesian-product-nonempty-set">
      <statement>
        <p permid="MVz">Encuentre un ejemplo de dos conjuntos no vacíos <m>A</m> y <m>B</m> para los que <m>A \times B = B \times A</m> es verdadero.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="4" permid="fIK" xml:id="sets-exercise-union-intersect-empty-set">
      <statement>
        <p permid="tcI">Demuestre que  <m>A \cup \emptyset = A</m> y <m>A \cap \emptyset = \emptyset</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="5" permid="LPT" xml:id="sets-exercise-union-intersection-commute">
      <statement>
        <p permid="ZjR">Demuestre que  <m>A \cup B = B \cup A</m> y <m>A \cap B = B \cap A</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="6" permid="rXc" xml:id="sets-exercise-union-distributes">
      <statement>
        <p permid="Fra">Demuestre que <m>A \cup (B \cap C) = (A \cup B) \cap (A \cup C)</m>.
    </p>
      </statement>
      <hint permid="JFh">
        <p permid="DXm">Notemos que <m>x \in A \cup B</m> si y solo si <m>x \in A</m> o <m>x \in B</m>.
          Equivalentemente, <m>x \in B</m> o <m>x \in A</m>,
          que es lo mismo que <m>x \in B \cup A</m>.
          Por lo tanto, <m>A \cup B = B \cup A</m>..
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="7" permid="Yel" xml:id="sets-exercise-intersection-distributes">
      <statement>
        <p permid="lyj">Demuestre que <m>A \cap (B \cup C) = (A \cap B) \cup (A \cap C)</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="8" permid="Elu" xml:id="sets-exercise-subset-iff-intersection">
      <statement>
        <p permid="RFs">Demuestre que  <m>A \subset B</m> si y solo si <m>A \cap B = A</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="9" permid="ksD" xml:id="sets-exercise-demorgan">
      <statement>
        <p permid="xMB">Demuestre que <m>(A \cap B)' = A' \cup B'</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="10" permid="QzM" xml:id="sets-exercise-set-minus-union">
      <statement>
        <p permid="dTK">Demuestre que  <m>A \cup B = (A \cap B) \cup (A \setminus B) \cup (B \setminus A)</m>.
    </p>
      </statement>
      <hint permid="Opa">
        <p permid="kev"><m>(A \cap B) \cup (A \setminus B) \cup (B \setminus A) = (A \cap B) \cup (A \cap B') \cup (B \cap A') = [A \cap (B \cup B')] \cup (B \cap A') = A \cup (B \cap A') = (A \cup B) \cap (A \cup A') = A \cup B</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="11" permid="wGV" xml:id="sets-exercise-times-union">
      <statement>
        <p permid="KaT">Demuestre que  <m>(A \cup B) \times C = (A \times C ) \cup (B \times C)</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="12" permid="cOe" xml:id="sets-exercise-set-minus-empty-set">
      <statement>
        <p permid="qic">Demuestre que  <m>(A \cap B) \setminus B = \emptyset</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="13" permid="IVn" xml:id="sets-exercise-union-set-minus">
      <statement>
        <p permid="Wpl">Demuestre que  <m>(A \cup B) \setminus B = A \setminus B</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="14" permid="pcw" xml:id="sets-exercise-set-minus-distribute">
      <statement>
        <p permid="Cwu">Demuestre que  <m>A \setminus (B \cup C) = (A \setminus B) \cap (A \setminus C)</m>.
    </p>
      </statement>
      <hint permid="SYT">
        <p permid="QlE"><m>A \setminus (B \cup C) = A \cap (B \cup C)' = (A \cap A) \cap (B' \cap C') = (A \cap B') \cap (A \cap C') = (A \setminus B) \cap (A \setminus C)</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="15" permid="VjF" xml:id="sets-exercise-a-cap-b-setminus-c">
      <statement>
        <p permid="iDD">Demuestre que  <m>A \cap (B \setminus C) = (A \cap B) \setminus (A \cap C)</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="16" permid="BqO" xml:id="sets-exercise-a-csetminus-b-cup-b-setminus-a">
      <statement>
        <p permid="OKM">Demuestre que  <m>(A \setminus B) \cup (B \setminus A) = (A \cup B) \setminus (A \cap B)</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="17" permid="hxX" xml:id="sets-exercise-which-are-maps">
      <statement>
        <p permid="uRV">¿Cuál de las siguientes relaciones <m>f: {\mathbb Q} \rightarrow {\mathbb Q}</m> define una función? En cada caso, justifique por qué <m>f</m> es o no es una función.
          <ol cols="2" permid="fXf">
  
            <li permid="GYW"><p permid="KhX"><m>\displaystyle f(p/q) = \frac{p+ 1}{p - 2}</m></p></li>
  
            <li permid="ngf"><p permid="qpg"><m>\displaystyle f(p/q) = \frac{3p}{3q}</m></p></li>
  
            <li permid="Tno"><p permid="Wwp"><m>\displaystyle f(p/q) = \frac{p+q}{q^2}</m></p></li>
  
            <li permid="zux"><p permid="CDy"><m>\displaystyle f(p/q) = \frac{3 p^2}{7 q^2} - \frac{p}{q}</m></p></li>
  
          </ol></p>
      </statement>
      <hint permid="rBD">
        <p permid="wsN">(a) No es función pues <m>f(2/3)</m> no está definido; (b) es una función; (c) no es función, pues <m>f(1/2) = 3/4</m> pero <m>f(2/4)=3/8</m>; (d) es una función.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="18" permid="NFg" xml:id="sets-exercise-which-are-one-to-one-onto">
      <statement>
        <p permid="aZe">Determine cuáles de las siguientes funciones son 1-1 y cuáles son sobre.  Si la función no es sobre, determine su rango.
          <ol permid="Meo">
   
            <li permid="fBG"><p permid="iKH"><m>f: {\mathbb R} \rightarrow {\mathbb R}</m> definida por <m>f(x) = e^x</m></p></li>
   
            <li permid="LIP"><p permid="ORQ"><m>f: {\mathbb Z} \rightarrow {\mathbb Z}</m> definida por <m>f(n) = n^2 + 3</m></p></li>
    
            <li permid="rPY"><p permid="uYZ"><m>f: {\mathbb R} \rightarrow {\mathbb R}</m> definida por <m>f(x) = \sin x</m></p></li>
   
            <li permid="XXh"><p permid="bgi"><m>f: {\mathbb Z} \rightarrow {\mathbb Z}</m> definida por <m>f(x) = x^2</m></p></li>
   
          </ol></p>
      </statement>
      <hint permid="DPV">
        <p permid="czW">(a) <m>f</m> es 1-1 pero no es sobre. <m>f({\mathbb R} ) = \{ x \in {\mathbb R} : x \gt 0 \}</m>.  (c) <m>f</m> no es 1-1 ni es sobre.  <m>f(\mathbb R) = \{ x : -1 \leq x \leq 1 \}</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="19" permid="tMp" xml:id="sets-exercise-inverse-composition">
      <statement>
        <p permid="Hgn">Sean <m>f :A \rightarrow B</m> y <m>g : B \rightarrow C</m> funciones invertibles; es decir, funciones tales que <m>f^{-1}</m> y <m>g^{-1}</m> existen. Muestre que <m>(g \circ f)^{-1} =f^{-1} \circ g^{-1}</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="20" permid="ZTy" xml:id="sets-exercise-functions-N-to-N">
      <statement>
        <p permid="nnw"><ol permid="slx">
    
          <li permid="Eeq"><p permid="Hnr">Defina una función <m>f: {\mathbb N} \rightarrow {\mathbb N}</m> que sea 1-1 pero no sobre.
    </p></li>
           
          <li permid="klz"><p permid="nuA">Defina una función <m>f: {\mathbb N} \rightarrow {\mathbb N}</m> que sea sobre pero no 1-1.
    </p></li>
   
        </ol></p>
      </statement>
      <hint permid="wlw">
        <p permid="IHf">(a) <m>f(n) = n + 1</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="21" permid="GaH" xml:id="sets-exercise-relation-on-circles">
      <statement>
        <p permid="TuF">Demuestre que la relación definida en <m>{\mathbb R}^2</m> por <m>(x_1, y_1 ) \sim (x_2, y_2)</m> si <m>x_1^2 + y_1^2 = x_2^2 + y_2^2</m> es una relación de equivalencia.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="22" permid="mhQ" xml:id="sets-exercise-bijective-surjective-compostion">
      <statement>
        <p permid="zBO">Sean <m>f : A \rightarrow B</m> y <m>g : B \rightarrow C</m> funciones.
          <ol permid="YsG">
   
            <li permid="QsI"><p permid="TBJ">Si <m>f</m> y <m>g</m> son ambas funciones 1-1, muestre que <m>g \circ f</m> es 1-1.
    </p></li>
   
            <li permid="wzR"><p permid="zIS">Si <m>g \circ f</m> es dobre, muestre que <m>g</m> es sobre.
    </p></li>
   
            <li permid="cHa"><p permid="fQb">Si <m>g \circ f</m> es 1-1, muestre que <m>f</m> es 1-1.
    </p></li>
   
            <li permid="IOj"><p permid="LXk">Si <m>g \circ f</m> es 1-1 y <m>f</m> es sobre, muestre que <m>g</m> es 1-1.
    </p></li>
   
            <li permid="oVs"><p permid="set">Si <m>g \circ f</m> es sobre y <m>g</m> es 1-1, muestre que <m>f</m> es sobre.
    </p></li>
   
          </ol></p>
      </statement>
      <hint permid="oGX">
        <p permid="oOo">(a) Sean <m>x, y \in A</m>. Entonces <m>g(f(x)) = (g \circ f)(x) = (g \circ f)(y) = g(f(y))</m>.  Luego, <m>f(x) = f(y)</m> y <m>x = y</m>,  de manera que <m>g \circ f</m> es 1-1. (b) Sea <m>c \in C</m>, entonces <m>c = (g \circ f)(x) = g(f(x))</m> para algún <m>x \in A</m>. Como <m>f(x) \in B</m>, <m>g</m> es sobre.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="23" permid="SoZ" xml:id="sets-exercise-inverse-rational-function">
      <statement>
        <p permid="fIX">Defina una función en los números reales como
          <me permid="Ryo">f(x) = \frac{x + 1}{x - 1}</me>.
        ¿Cuáles son el dominio y el rango de <m>f</m>? ¿cuál es la inversa de <m>f</m>?  Calcule <m>f \circ f^{-1}</m> y <m>f^{-1} \circ f</m>.
    </p>
      </statement>
      <hint permid="AVp">
        <p permid="UVx"><m>f^{-1}(x) = (x+1)/(x-1)</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="24" permid="ywi" xml:id="sets-exercise-maps-set-operations">
      <statement>
        <p permid="LQg">Sea <m>f: X \rightarrow Y</m> una función con <m>A_1, A_2 \subset X</m> y <m>B_1, B_2 \subset Y</m>. 
          <ol permid="EzP">
   
            <li permid="ZMu"><p permid="cVv">Demuestre que <m>f( A_1 \cup A_2 ) = f( A_1) \cup f( A_2 )</m>.
    </p></li>
   
            <li permid="FTD"><p permid="JcE">Demuestre que <m>f( A_1 \cap A_2 ) \subset f( A_1) \cap f( A_2 )</m>.  Dé un ejemplo en que la igualdad falle.
    </p></li>
             
            <li permid="maM"><p permid="pjN">Demuestre que <m>f^{-1}( B_1 \cup B_2 ) = f^{-1}( B_1) \cup f^{-1}(B_2 )</m>, donde
              <me permid="xFx">f^{-1}(B) = \{ x \in X : f(x) \in B \}</me>.
    </p></li>
             
            <li permid="ShV"><p permid="VqW">Demuestre que <m>f^{-1}( B_1 \cap B_2 ) = f^{-1}( B_1) \cap f^{-1}( B_2 )</m>.
    </p></li>
             
            <li permid="ype"><p permid="Byf">Demuestre que <m>f^{-1}( Y \setminus B_1 ) = X \setminus f^{-1}( B_1)</m>.
    </p></li>
           
           </ol></p>
      </statement>
      <hint permid="NjH">
        <p permid="BcG">(a) Sea <m>y \in f(A_1 \cup A_2)</m>. Entonces existe <m>x \in A_1 \cup A_2</m> tal que <m>f(x) = y</m>.  Luego, <m> y \in f(A_1)</m> o <m>f(A_2) </m>.  Por lo tanto, <m> y \in f(A_1) \cup f(A_2)</m>. Así, <m> f(A_1 \cup A_2) \subset f(A_1) \cup f(A_2)</m>. Recíprocamente, si <m>y \in f(A_1) \cup f(A_2)</m>, entonces <m> y \in f(A_1)</m> o <m>f(A_2)</m>.  Luego, existe <m>x</m> en <m>A_1</m> o  <m>A_2</m> tal que <m>f(x) = y</m>.  Entonces existe <m>x \in A_1 \cup A_2</m> tal que <m>f(x) = y</m>.  Por lo tanto, <m> f(A_1) \cup f(A_2) \subset f(A_1 \cup A_2)</m>, y <m>f(A_1 \cup A_2) = f(A_1) \cup f(A_2)</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="25" permid="eDr" xml:id="sets-exercise-determine-equivalence-relations">
      <statement>
        <p permid="rXp">Determine si las siguientes relaciones son relaciones de equivalencia o no.  Si la relación es una relación de equivalencia, describa la partición dada por ella.  Si no lo es, indique qué es lo que falla.
          <ol cols="2" permid="kGY">
   
            <li permid="jgg"><p permid="mph"><m>x \sim y</m> en <m>{\mathbb R}</m> si <m>x \geq y</m></p></li>
   
            <li permid="Pnp"><p permid="Swq"><m>m \sim n</m> en <m>{\mathbb Z}</m> si <m>mn &gt; 0</m></p></li>
   
            <li permid="vuy"><p permid="yDz"><m>x \sim y</m> en <m>{\mathbb R}</m> si <m>|x - y| \leq 4</m></p></li>
             
            <li permid="bBH"><p permid="eKI"><m>m \sim n</m> en <m>{\mathbb Z}</m> si <m>m \equiv n \pmod{6}</m></p></li>
             
          </ol></p>
      </statement>
      <hint permid="ZxZ">
        <p permid="hjP">(a) La relación no es simétrica. (b) La relación no es refleja, pues <m>0</m> no es equivalente a sí mismo. (c) La relación no es transitiva.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="26" permid="KKA" xml:id="sets-exercise-nonsymmetric-circle">
      <statement>
        <p permid="Yey">Defina una relación <m>\sim</m> en <m>{\mathbb R}^2</m> diciendo que <m>(a, b) \sim (c, d)</m> si y solo si <m>a^2 + b^2 \leq c^2 + d^2</m>. Muestre que <m>\sim</m> es refleja y transitiva pero no simétrica.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="27" permid="qRJ" xml:id="sets-exercise-matrix-mult-well-defined">
      <statement>
        <p permid="ElH">Muestre que una matriz de <m>m \times n</m> da lugar a una función bien-definida de <m>{\mathbb R}^n</m> en <m>{\mathbb R}^m</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="28" permid="WYS" xml:id="sets-exercise-reflexive-error">
      <statement>
        <p permid="ksQ">Encuentre el error en el siguiente argumento mostrando un contraejemplo. <q>La propiedad refleja es redundante entre los axiomas para una relación de equivalencia.  Si <m>x \sim y</m>, entonces <m>y \sim x</m> por la propiedad simétrica.  Usando la transitividad, podemos deducir que <m>x \sim x</m>.</q> </p>
      </statement>
      <hint permid="yaJ">
        <p permid="NqY">Sea <m>X = {\mathbb N} \cup \{ \sqrt{2}\, \}</m> y defina <m>x \sim y</m> si <m>x + y \in {\mathbb N}</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="29" permid="Dgb" xml:id="sets-exercise-projective-real-line">
      <title>Recta Real Proyectiva</title>
      <statement>
        <p permid="QzZ">Defina una relación en <m>{\mathbb R}^2 \setminus  \{ (0,0) \}</m> haciendo <m>(x_1, y_1) \sim (x_2, y_2)</m> si existe un número real <m>\lambda</m> distinto de cero tal que <m>(x_1, y_1)  = ( \lambda x_2, \lambda y_2)</m>.  Demuestre que <m>\sim</m> define una relación de equivalencia en <m>{\mathbb R}^2 \setminus (0,0)</m>.  ¿Cuáles son las correspondientes clases de equivalencia?  Esta relación de equivalencia define la recta proyectiva, denotada por  <m>{\mathbb P}({\mathbb R}) </m>, que es muy importante en geometría.
    </p>
      </statement>
      
    </exercise>
  
  </exercises>
  
<!--Todo Figure out how to include comments in front of the list of references-->

<references xml:id="sets-references" permid="ztb">
    <title>Referencias y Lecturas Recomendadas</title>
<!--
    <p>La siguiente lista contiene referencias adecuadas para lecturas adicionales. Con la excepción de [8] y [9] y quizás [1] y [3], todos estos libros están más o menos al mismo nivel que este texto. Se pueden encontrar interesantes aplicaciones del álgebra en [2], [5], [10], y [11].
    </p>
-->
    <biblio type="raw" permid="fAk"> <!-- was [1] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Artin, M. <title>Abstract Algebra</title>. 2nd ed. Pearson, Upper Saddle River, NJ, 2011.
    </biblio>

    <biblio type="raw" permid="LHt"> <!-- was [2] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Childs, L. <title>A Concrete Introduction to Higher Algebra</title>. 2nd ed. Springer-Verlag, New York, 1995.
    </biblio>

    <biblio type="raw" permid="rOC"> <!-- was [3] -->
    <!-- Reference updated 5/4/2010 - TWJ -->
    Dummit, D. y Foote, R.  <title>Abstract Algebra</title>. 3rd ed. Wiley, New York, 2003.
    </biblio>

    <biblio type="raw" permid="XVL"> <!-- was [2] -->
    <!--Seems to be out of print 5/4/2010 - TWJ -->
    Ehrlich, G. <title>Fundamental Concepts of Algebra</title>. PWS-KENT, Boston, 1991.
    </biblio>

    <biblio type="raw" permid="EcU"> <!-- was [4] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Fraleigh, J. B. <title>A First Course in Abstract Algebra</title>. 7th ed. Pearson, Upper Saddle River, NJ, 2003.
    </biblio>

    <biblio type="raw" permid="kkd"> <!-- was [5] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Gallian, J. A. <title>Contemporary Abstract Algebra</title>. 7th ed. Brooks/Cole, Belmont, CA, 2009.
    </biblio>

    <biblio type="raw" permid="Qrm"> <!-- was [6] -->
    <!-- I believe that this is not still in print, but it is certainly available through amazon.com 5/4/2010 - TWJ -->
    Halmos, P. <title>Naive Set Theory</title>.  Springer, New York, 1991. One of the best references for set theory.
    </biblio>

    <biblio type="raw" permid="wyv"> <!-- was [7] -->
    <!-- Reference updated 5/4/2010 - TWJ -->
    Herstein, I. N. 
    <title>Abstract Algebra</title>. 3rd ed. Wiley, New York, 1996.
    </biblio>

    <biblio type="raw" permid="cFE"> <!-- was [8] -->
    <!-- Reference updated 5/4/2010 - TWJ -->
    Hungerford, T. W. 
    <title>Algebra</title>. Springer, New York, 1974. One
    of the standard graduate algebra texts.
    </biblio>

    <biblio type="raw" permid="IMN"> <!-- was [9] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Lang, S. 
    <title>Algebra</title>. 3rd ed. Springer, New York, 2002.
    Another standard graduate text.
    </biblio>

    <biblio type="raw" permid="oTW"> <!-- was [10] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Lidl, R. y Pilz, G. 
    <title>Applied Abstract Algebra</title>. 2nd ed. Springer,
    New York, 1998. 
    </biblio>

    <biblio type="raw" permid="Vbf"> <!-- was [11] -->
     <!-- No longer in print 5/4/2010 - TWJ -->
    Mackiw, G. <title>Applications of Abstract Algebra</title>. Wiley, New York,
    1985. 
    </biblio>

    <biblio type="raw" permid="Bio"> <!-- was [12] -->
    Nickelson, W. K. <!-- Reference updated 5/4/2010 - TWJ -->
    <title>Introduction to Abstract Algebra</title>. 3rd ed. Wiley, New York,
    2006. 
    </biblio>

    <biblio type="raw" permid="hpx"> <!-- was [13] -->
     <!-- Reference updated 5/4/2010 - TWJ -->
    Solow, D. 
    <title>How to Read y Do Proofs</title>. 5th ed. Wiley, New York,
    2009. 
    </biblio>

    <biblio type="raw" permid="NwG"> <!-- was [14] -->
     <!-- No longer in print 5/4/2010 - TWJ -->
    van der Waerden, B. L. 
    <title>A History of Algebra</title>. Springer-Verlag,
    New York, 1985. An account of the historical development of algebra. 
    </biblio>

  </references> 

  <section xml:id="sets-sage" component="sage-info" permid="LfZ">
    <title>Sage</title>
    <introduction permid="bIL">
      <p permid="osP">
      Sage es un sistema poderoso para estudiar y explorar diversas áreas de las matemáticas.  En este libro, se estudia una variedad de estructuras algebraicas, tales como grupos, anillos y cuerpos.  Sage tiene excelentes implementaciones de muchas propiedades de estos objetos como veremos en lo capítulos que vienen.  Pero acá y ahora, en este capítulo inicial, nos concentraremos en unas pocas cosas generales para sacarle el mayor provecho posible a Sage.
    </p>
  
      <p permid="UzY">Usted puede usar Sage de varias formas diferentes.  Lo puede usar como un programa de línea de comando si está instalado en su computador, o a través de una aplicación web como SageMathCloud.  Este texto supondrá que lo está leyendo como una hoja de cálculo dentro de un Notebook Sage (una interfaz de navegador web), o que esta es una sección del libro completo presentado como páginas web, y usted está usando el Servidor de Sage Cell Server vía esas páginas.  Después de los primero capítulos las explicaciones debiesen ser igualmente válidas sin importar cómo esté ejecutando los comandos Sage.
    </p>
  
    </introduction>
  
    <subsection permid="BMn">
      <title>Ejecutando Comandos Sage</title>
  
      <p permid="nXq">Su principal interacción será escribir comandos Sage dentro de una <em>celda de cálculo</em>.  Si está leyendo esto dentro de un Notebook Sage o en la versión web del libro, entonces encontrará una celda de cálculo justo debajo de este párrafo.  Pinche una vez dentro de la celda y si está en un Notebook Sage, obtendrá un borde más dintintivo alrededor, y un cursor parpadeante en el interior, además de un enlace <q>evaluate</q> debajo. </p>
  
      <sage/>
  
      <p permid="Uez"> Escriba <c>2+2</c> y pinche en el enlace de evaluación.  ¿Apareció un <c>4</c> debajo de la celda?  Si es así, ha tenido éxito en enviar un comando a Sage para su evaluación y ha recibido la respuesta (correcta).
    </p>
  
      <p permid="AlI">Acá hay otra celda de cálculo.  Intente evaluar el comando <c>factorial(300)</c>.
    </p>
  
      <sage/>
  
      <p permid="gsR">Hmmmmm.  ¡Ese es un entero grande!  El resultado debiese tener 615 dígitos en total.  Puede que deba usar la barra de navegación para verlo completo o que aparezca cortado y con diagonales al final de cada línea (éstas indican la continuación en la línea siguiente).
    </p>
  
      <p permid="MAa">Para hacer nuevas celdas de cálculo en el Notebook Sage (solo ahí), pase con el mouse justo arriba de otra celda de cálculo o justo debajo de una celda de salida.  Cuando vea una delgada barra azul, pinche y se abrirá una nueva celda lista para ser usada.  Note que  su hoja de trabajo recordará todas las operaciones que realice, en el orden en que las realice, sin importar dónde estén las celdas por lo que es mejor mantener el orden y agregar celdas abajo.
    </p>
  
      <p permid="sHj">Intente situar el cursor justo debajo del enorme número que obtuvo para <m>300!</m>  Pinche en la barra azul (no funciona en la versión web del libro) y haga otro cálculo en la nueva celda de cálculo.
    </p>
  
      <p permid="YOs">Cada celda de cálculo solo mostrará la salida del último comando en la celda.  Intente predecir la salida de la siguiente celda antes de ejecutarla.
    </p>
  
      <!-- Doctest framework *will* create output from "b", contrary to notebook behavior -->
      <!-- So doctest will fail, and doctest="not tested" does not help the situation -->
      <sage permid="wAR">
        <input>
        a = 10
        b = 6
        b = b - 10
        a = a + 20
        a
        </input>
        <output>30</output>
      </sage>
  
      <p permid="EVB">La siguiente celda de cálculo no producirá nada visible pues el único comando no produce salida.  Pero tendrá un efecto, como puede apreciar cuando ejecute la celda siguiente.  Note como se usa el valor de <c>b</c> de arriba.  Ejecute esta celda <em>una vez</em>.  Exactamente una vez.  Aunque <em>parezca</em> no hacer nada. Si la ejecuta dos veces, no nos hacemos responsables de lo que pueda suceder.
    </p>
  
      <sage permid="IPj">
        <input>b = b + 50</input>
      </sage>
  
      <p permid="lcK">Ahora ejecute esta celda, la que sí producirá una salida.
    </p>
  
      <sage permid="oWs">
        <input>b + 20</input>
        <output>66</output>
      </sage>
  
      <p permid="RjT">Así <c>b</c> comenzó su existencia como <c>6</c>.  A continuación le restamos <m>10</m>.  En una celda posterior le sumamos <c>50</c>.  Esto suponiendo que ejecutó la celda <em>exactamente</em> una vez!  En la última celda creamos <c>b+20</c> (pero no guardamos el resultado) y es ese valor (<m>66</m>) el que se mostró, mientras <c>b</c> aún vale <m>46</m>.
    </p>
  
      <p permid="xrc">Puede combinar varios comandos en una línea separándolos por punto y coma (;). Esto se puede usar para obtener múltiples salidas de una solo celda. La sintaxis para construir una matriz debiera ser bastante clara cuando vea el resultado, pero si no lo es, no se preocupe, por ahora no es importante.
    </p>
  
      <sage permid="VdB">
        <input>A = matrix([[3, 1], [5,2]]); A</input>
        <output>
        [3 1]
        [5 2]
        </output>
      </sage>
  
      <sage permid="BkK">
        <input>print(A); print(); print(A.inverse())</input>
        <output>
          [3 1]
          [5 2]
          &lt;BLANKLINE&gt;
          [ 2 -1]
          [-5  3]
          </output>
      </sage>
      </subsection>
      <subsection permid="hTw">
      <title>Ayuda Inmediata</title>
  
      <p permid="dyl">Algunos comandos en Sage son <q>funciones,</q> un ejemplo es <c>factorial()</c> arriba.  Otros comandos son <q>métodos</q> de un objeto y son características del objeto, un ejemplo <c>.inverse()</c> como un método de una matriz.  Una vez que sabe como crear un objeto (como una matriz), entonces es fácil ver todos los métodos disponibles.  Escriba el nombre del objeto seguido de un (<q>punto</q>) y presione la tecla TAB.  
      Si tiene <c>A</c> definida de arriba, entonces la celda de abajo está lista para la prueba, pinche en ella y presione TAB (¡no <q>evaluate</q>!).  Debiese obtener una larga lista de los métodos posibles.
    </p>
  
      <sage doctest="not tested" permid="Efq">
        <input>A.</input>
      </sage>

      <p permid="JFu">Para obtener ayuda en cómo usar un método con un objeto, escriba su nombre después del punto (sin paréntesis) seguido de un signo de interrogación y presione TAB (o evalúe la celda).  (Presione la tecla de escape <q>ESC</q> para sacar la lista, o presione en el texto para un método.)</p>
  
      <sage doctest="not tested" permid="kmz">
        <input>A.inverse?</input>
      </sage>
  
      <p permid="pMD">Con un segundo signo de interrogación es posible ver las instrucciones programadas en Sage que hacen que el método funcione,
        una vez que se desplaza hacia abajo más allá de la documentación delimitada por las comillas triples (<c>"""</c>):
      </p>
  
      <sage doctest="not tested" permid="QtI">
      <input>A.inverse??</input>
      </sage>
  
      <p permid="VTM">Vale la pena ver lo que hace Sage cuando hay un error.  Seguramente le tocará ver un buen número de estos, e inicialmente pueden resultar bastante intimidantes.  Pero con el tiempo, los podrá entender y usar efectivamente, además de ojalá verlos con menos frecuencia.  Ejecute la celda de abajo, pide el inverso de una matriz que no es invertible.
    </p>
  
      <sage permid="hrT">
        <input>
        B = matrix([[2, 20], [5, 50]])
        B.inverse()
        </input>
        <output>
        Traceback (most recent call last):
        ...
        ZeroDivisionError: Matrix is singular
        </output>
      </sage>
  
      <p permid="CaV">Si está en una celda de un Notebook Sage, verá una versión abreviada del error.  Pinchar a la izquierda de éste aumenta el detalle desplegado y pinchando nuevamente desaparece por completo.  Finalmente pinchando una tercera vez se vuelve al mensaje abreviado.  Lea la parte final del error primero, esa puede ser la mejor explicación.  Acá el error <c>ZeroDivisionError</c> no es 100% apropiado, pero se acerca.  La matriz no es invertible o equivalentemente su determinante es cero por lo que en algún punto Sage intentó dividir por cero.  El resto del mensaje comienza con la parte de su código que dio origen al error, seguida de los comandos y funciones intermedias ejecutadas hasta el punto preciso donde se produjo el problema.  A veces esta información le dará algunas pistas, otras veces será completamente indescifrable.  No se deje asustar si parece misterioso, pero recuerde que conviene leer la última línea primero, después volver atrás y leer las primeras líneas para buscar algo que se parezca a lo que escribió usted.
    </p>
  
    </subsection>
  
    <subsection permid="OaF">
      <title>Comentando su Trabajo</title>
  
      <p permid="iie">Es fácil comentar el trabajo cuando está usando un Notebook Sage. (Lo siguiente solo es válido en ese contexto.  Puede abrir un Notebook Sage y experimentar allí.)  Es posible obtener un pequeño procesador de texto en otra celda entre las celdas de cálculo.  Una forma de hacer que aparezca es pinchar en a barra azul mencionada antes, pero presionando simultáneamente la tecla SHIFT.  Experimente con tipos de letra, colores, listas, etc y luego presione <q>Save changes</q> para guardar y salir.  Pinche doble en su texto si necesita volver a editarlo.
    </p>
  
      <p permid="Opn">Apra el procesador de texto nuevamente para escribir algo.  Escriba lo siguiente <em>exactamente,</em><cd>
        <cline>Teorema de Pitágoras: $c^2=a^2+b^2$</cline>
      </cd>y guarde los cambios.  Los símbolos entre los signos pesos se interpretan de acuerdo al lenguaje conocido como <tex/> <mdash/> puede navegar internet para aprender sobre esta útil herramienta. (Al menos entre matemáticos y físicos es muy popular.)</p>
      <sage/>
  
      </subsection>
      <subsection permid="uhO">
      <title>Listas</title>
  
      <p permid="uww">Gran parte de nuestra interacción con conjuntos será por medio de listas Sage.  Estas no son realmente conjuntos <mdash/> permiten duplicados, y el orden de los elementos es relevante.  Pero se parecen a los conjuntos, y son muy poderosas de manera que las usaremos a menudo.  Empezaremos con una lista inventada para practicar, las cremillas significan que los elementos son de texto, sin significado especial.  Ejecute estas celdas en la medida que avanzamos.
    </p>
  
      <sage permid="Nzc">
        <input>
        zoo = ['snake', 'parrot', 'elephant', 'baboon', 'beetle']
        zoo
        </input>
        <output>
        ['snake', 'parrot', 'elephant', 'baboon', 'beetle']
        </output>
      </sage>
  
      <p permid="aDF">Los corchetes definen los límites de la lista, comas separan sus elementos, y le podemos asignar un nombre a la lista.  Para trabajar con un elemento de la lista, usamos el nombre y un par de corchetes conteniendo un índice.  Note que las listas usan índices que <em>comienzan a enumerar desde cero</em>.  Esto parece extraño al principio, pero se acostumbrará.
    </p>
  
      <sage permid="tGl">
        <input>zoo[2]</input>
        <output>'elephant'</output>
      </sage>
  
      <p permid="GKO">Podemos agregar un nuevo animal al zoológico, se sitúa al final.
    </p>
  
      <sage permid="ZNu">
        <input>zoo.append('ostrich'); zoo</input>
        <output>['snake', 'parrot', 'elephant', 'baboon', 'beetle', 'ostrich']</output>
      </sage>
  
      <p permid="mRX">Podemos sacar a un criatura.
    </p>
  
      <sage permid="FUD">
        <input>
        zoo.remove('parrot')
        zoo
        </input>
        <output>['snake', 'elephant', 'baboon', 'beetle', 'ostrich']</output>
      </sage>
  
      <p permid="SZg">Podemos extraer una sublista.  Acá comenzamos con el elemento 1 (elephant) y continuamos hasta, <em>pero sin incluirlo</em>, el elemento 3 (beetle).  Nuevamente un poco extraño, pero parecerá natural a la larga.  Por ahora, note que estamos extrayendo dos elementos de la lista, exactamente <m>3-1=2</m> elementos.
    </p>
  
      <sage permid="mbM">
        <input>
        mammals = zoo[1:3]
        mammals
        </input>
        <output>['elephant', 'baboon']</output>
      </sage>
  
      <p permid="zgp">Querremos saber si dos listas son iguales, o si los conjuntos que representan lo son.  Para lograrlo tendremos que ordenar las listas primero.  Una función crea una nueva lista ordenada, sin alterar la lista original.  Guardamos la nueva lista con otro nombre.
    </p>
  
      <sage permid="SiV">
        <input>
        newzoo = sorted(zoo)
        newzoo
        </input>
        <output>['baboon', 'beetle', 'elephant', 'ostrich', 'snake']</output>
      </sage>
  
      <sage permid="yqe">
        <input>
        zoo.sort()
        zoo
        </input>
        <output>['baboon', 'beetle', 'elephant', 'ostrich', 'snake']</output>
      </sage>
  
      <p permid="fny">Note que si ejecuta esta última celda su zoológico habrá cambiado y algunos comandos no necesariamente se ejecutarán de la misma forma.  Si quiere experimentar, vuelva a la creación original del zoo y ejecute las celdas nuevamente con un zoo renovado.
    </p>
  
      <p permid="LuH">Una construcción llamada <term>list comprehension</term> (no he encontrado una buena traducción) es muy poderosa, especialmente dado que imita casi exactamente la notación que usamos para describir conjuntos.  Supongamos que queremos formar los plurales de los nombres de las criaturas en nuestro  zoo.  Construimos una nueva lista, basada en todos los elementos de nuestra lista anterior.
    </p>
  
      <sage permid="exn">
        <input>
        plurality_zoo = [animal+'s' for animal in zoo]
        plurality_zoo
        </input>
        <output>['baboons', 'beetles', 'elephants', 'ostrichs', 'snakes']</output>
      </sage>
  
      <p permid="rBQ">Casi como dice: agregamos una <q>s</q> al nombre de cada animal, para cada animal en el zoo, y los ponemos en una nueva lista.  Perfecto.  (Excepto que el plural de <q>ostrich</q> está mal.)</p>
  
      </subsection>
      <subsection permid="aoX">
      <title>Listas de Enteros</title>
  
      <p permid="XIZ">Un tipo final de lista, con números esta vez.  La función <c>srange()</c> creará una lista de enteros.  (La <q>s</q> en el nombre se refiere a <q>Sage</q> y producirá enteros óptimos para Sage.  Muchas de las dificultades iniciales con Sage y teoría de grupos pueden ser aliviadas con solo usar este comando para crear listas de enteros.)  En su formal más simple, <c>srange(12)</c> creará una lista de 12 enteros, <em>empezando de cero</em> y llegando hasta 11, <em>sin incluir el</em> 12.  ¿Suena familiar?</p>
  
      <sage permid="KEw">
        <input>dozen = srange(12); dozen</input>
        <output>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]</output>
      </sage>
  
      <p permid="DQi">A continuación dos formas adicionales que entenderá estudiando los ejemplos.
    </p>
  
      <sage permid="qLF">
        <input>teens = srange(13, 20); teens</input>
        <output>[13, 14, 15, 16, 17, 18, 19]</output>
      </sage>
  
      <sage permid="WSO">
        <input>decades = srange(1900, 2000, 10); decades</input>
        <output>[1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990]</output>
      </sage>
    </subsection>
  
    <subsection permid="Gwg">
      <title>Guardando y Compartiendo su Trabajo</title>
  
      <p permid="jXr">Hay un botón <q>Save</q> en la esquina superior derecha del Notebook Sage.  Pinchar en él guardará su trabajo de manera que pueda recuperarlo desde el notebook Sage en una ocasión futura, sin embargo deberá volver a ejecutar todas las celdas cuando reabra su hoja de trabajo.
    </p>
  
      <p permid="QeA">También hay un menú que se despliega donde dice <q>File</q>, a la izquierda, justo arriba de la primera celda de cálculo
      (no lo confunda con el menú de su navegador).  Verá una opción acá etiquetada <q>Save worksheet to a file...</q>  Cuando haga esto, creará una copia de su hoja de trabajo en el formato <c>sws</c> (abreviación de <q>Sage WorkSheet</q>).  Puede enviar este archivo por email, o publicarlo en una página web, para que otros usuarios lo vean y lo suban usando el enlace <q>Upload</q> en su propio notebook incorporando una copia de su hoja de trabajo en el notebook de ellos.
    </p>
  
      <p permid="wlJ">Hay otras formas de compartir hojas de trabajo con las que puede experimentar, pero esto le da una manera de compartir con cualquier persona.
    </p>
  
      <p permid="csS">Hemos visto bastantes cosas en esta sección, así es que vuelva más adelante a repasar y descubrir detalles que no haya notado.  Hay muchas otras características del Notebok Sage que no hemos cubierto acá.
    </p>
    </subsection>
  
  </section>

  <exercises xml:id="sets-sage-exercises" component="sage-exercises" permid="SKy">
  <title>Ejercicios en Sage</title>

  <exercise number="1" permid="jnk" xml:id="sets-sage-exercise-cocalc">
    <statement>
      <p permid="wHi">Este ejercicio es solo para asegurarnos de que sabe cómo usar Sage.  Puede que esté usando un Notebook Sage en su propio computador o en el servidor online CoCalc a través de su navegador.  En cualquier caso, comience una nueva hoja de trabajo.  Haga algún cálculo no trivial, un gráfico o algún cálculo numérico con enorme precisión o con números gigantes.   Construya una lista interesante y experimente con ella.  Podría incluir algo de texto diagramado o usando <tex/> en el mini procesador de textos incluido en el Notebook Sage o agregue un comentario en celdas dentro de CoCalc usando <term>magics</term> <c>%html</c> o <c>%md</c> en una línea propia seguido de texto con sintaxis <init>HTML</init> o Markdown (respectivamente).
    </p>

      <p permid="cOr">Use el mecanismo que su profesor le haya indicado para entregar su trabajo.  O guarde su hoja de trabajo y compártala con un compañero.
    </p>
    </statement>
    
  </exercise>

</exercises>


</chapter>
