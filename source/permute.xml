<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- Abstract Algebra: Theory and Applications        -->
<!--                                                  -->
<!-- Text: Copyright (C) 1997-2023  Thomas W. Judson  -->
<!-- Sage: Copyright (C) 2010-2023 Robert A. Beezer  -->
<!-- See the file COPYING for copying conditions.     -->
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- See the file COPYING for copying conditions.     -->
<chapter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="permute" permid="AQc">
  <title>Grupos de Permutaciones</title>

  <introduction permid="DZd">
    <p permid="ogy">Los grupos de permutaciones tienen un rol central en el estudio de simetrías geométricas y en la teoría de Galois, el estudio de la búsqueda de soluciones de ecuaciones polinomiales.  Además son una fuente de muchos ejemplos de grupos no abelianos.
    </p>

    <p permid="UnH">Recordemos por un momento las simetrías del triángulo equilátero <m>\bigtriangleup ABC</m> del Capí<xref ref="groups"/>. Las simetrías de hecho consisten en permutaciones de los tres vértices, donde una <term>permutación</term><idx><h>Permutación</h><h>definición de</h></idx> del conjunto <m>S = \{ A, B, C \}</m> es una biyección <m>\pi :S \rightarrow S</m>. Los tres vértices tienen la siguientes seis permutaciones.
      <md permid="XwI">
        <mrow>\begin{pmatrix}
        A &amp; B &amp; C \\
        A &amp; B &amp; C
        \end{pmatrix}
        \qquad
        \begin{pmatrix}
        A &amp; B &amp; C \\
        C &amp; A &amp; B
        \end{pmatrix}
        \qquad
        \begin{pmatrix}
        A &amp; B &amp; C \\
        B &amp; C &amp; A
        \end{pmatrix}</mrow>
        <mrow>\begin{pmatrix}
        A &amp; B &amp; C \\
        A &amp; C &amp; B
        \end{pmatrix}
        \qquad
        \begin{pmatrix}
        A &amp; B &amp; C \\
        C &amp; B &amp; A
        \end{pmatrix}
        \qquad
        \begin{pmatrix}
        A &amp; B &amp; C \\
        B &amp; A &amp; C
        \end{pmatrix}</mrow>
      </md>
    </p>

    <p permid="AuQ">Hemos usado el arreglo
      <me permid="DDR">
        \begin{pmatrix}
        A &amp; B &amp; C \\
        B &amp; C &amp; A
        \end{pmatrix}
      </me>
    para denotar la permutación que envía <m>A</m> en <m>B</m>, <m>B</m> en <m>C</m>, y <m>C</m> en <m>A</m>. Es decir,
      <md permid="jLa">
        <mrow> A &amp; \mapsto  B</mrow>
        <mrow> B &amp; \mapsto  C</mrow>
        <mrow> C &amp; \mapsto  A</mrow>
      </md>.
    Las simetrías de un triángulo forman un grupo. En este capítulo estudiaremos grupos de ese tipo.
    </p>
  </introduction>
 
  <section xml:id="permute-section-permutation-definitions" permid="Wyg">
    <title>Definiciones y Notación</title>
 
     <introduction permid="kgm">
      <p permid="gBZ">En general, las permutaciones de un conjunto <m>X</m> forman el grupo <m>S_X</m>. Si <m>X</m> es un conjunto finito, podemos suponer que <m>X=\{ 1, 2, \ldots, n\}</m>. En este caso escribiremos <m>S_n</m> en lugar de <m>S_X</m>. <notation><usage><m>S_n</m></usage><description>el grupo simétrico en <m>n</m> símbolos</description></notation> El siguiente teorema dice que <m>S_n</m> es un grupo. A este grupo lo llamaremos <term>grupo simétrico</term><idx><h>Simétrico</h><h>grupo</h></idx> en <m>n</m> símbolos.
    </p>

      <theorem permid="GTJ">
        <statement>
          <p permid="kBY">El grupo simétrico en <m>n</m> símbolos, <m>S_n</m>, es un grupo con <m>n!</m> elementos, con la operación binaria de composición de funciones.
    </p>
        </statement>

        <proof permid="cBN">
          <p permid="Kkb">La identidad de <m>S_n</m> es simplemente la función identidad que envía <m>1</m> en <m>1</m>,
            <m>2</m> en <m>2</m>, <m>\ldots</m>, <m>n</m> en <m>n</m>. Si <m>f : S_n \rightarrow S_n</m> es una permutación, entonces <m>f^{-1}</m> existe, pues <m>f</m> es biyectiva; luego, toda permutación tiene una inversa. La composición de funciones es asociativa, lo que hace que  la operación del grupo sea asociativa. Dejamos como ejercicio la demostración de que <m>|S_n|= n!</m>.
    </p>
        </proof>
      </theorem>

      <p permid="MJi">Un subgrupo de <m>S_n</m> se llama <idx><h>Permutaciones</h><h>grupo de</h></idx><idx><h>Grupo de permutaciones</h></idx><term>grupo de permutaciones</term>.
    </p>

      <example xml:id="permute-example-s5" permid="zpk">
        <p permid="Gkc">Considere el subgrupo <m>G</m> de <m>S_5</m> que consiste de la permutación <m>\identity</m> y las permutaciones 
          <md permid="PSj">
            <mrow>\sigma
            &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            1 &amp; 2 &amp; 3 &amp; 5 &amp; 4
            \end{pmatrix}</mrow>
            <mrow>\tau
            &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            3 &amp; 2 &amp; 1 &amp; 4 &amp; 5
            \end{pmatrix}</mrow>
            <mrow>\mu
            &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            3 &amp; 2 &amp; 1 &amp; 5 &amp; 4
            \end{pmatrix}</mrow>
          </md>.
        La siguiente tabla nos indica como multiplicar elementos en el grupo de permutaciones <m>G</m>.
    </p>

    <p permid="mrl">
      <me permid="vZs">
        \begin{array}{c|cccc}
        \circ &amp; \identity &amp; \sigma &amp; \tau &amp; \mu \\ \hline
        \identity &amp; \identity &amp; \sigma &amp; \tau &amp; \mu \\
        \sigma &amp; \sigma &amp; \identity &amp; \mu &amp; \tau \\
        \tau &amp; \tau &amp; \mu &amp; \identity &amp; \sigma \\
        \mu &amp; \mu &amp; \tau &amp; \sigma &amp; \identity
        \end{array}
      </me>
    </p>

      </example>
   
      <remark permid="rKL">
        <p permid="bSg">Si bien es natural multiplicar los elementos en un grupo de izquierda a derecha, las funciones se componen de derecha a izquierda.  Sean <m>\sigma</m> y <m>\tau</m> permutaciones en un conjunto <m>X</m>. Para componer <m>\sigma</m> y <m>\tau</m> como funciones, calculamos <m>(\sigma \circ \tau)(x) = \sigma( \tau(x))</m>. Es decir, aplicamos primero <m>\tau</m>, luego <m>\sigma</m>. Hay diversas formas de resolver esta inconsistencia. <em>Nosotros adoptaremos la convención de multiplicar permutaciones de derecha a izquierda. Para calcular <m>\sigma \tau</m>, haga <m>\tau</m> primero y luego <m>\sigma</m>.</em> Es decir, por <m>\sigma \tau (x)</m> queremos decir <m>\sigma( \tau( x))</m>. (Otra manera de resolver este problema sería escribir las funciones a la derecha; es decir, en lugar de escribir <m>\sigma(x)</m>, podríamos escribir <m>(x)\sigma</m>. También podríamos multiplicar las permutaciones de izquierda a derecha para coincidir con la forma usual de multiplicar elementos en un grupo. Cada una de estas soluciones ha sido usada.)</p>
      </remark>
   
      <example xml:id="permute-example-s4-nonabelian" permid="fwt">
        <p permid="Syu">La multiplicación de permutaciones no es conmutativa en general. Sean
          <md permid="ouT">
            <mrow>\sigma
            &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 \\
            4 &amp; 1 &amp; 2 &amp; 3
            \end{pmatrix}</mrow>
            <mrow>\tau
            &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 \\
            2 &amp; 1 &amp; 4 &amp; 3
            \end{pmatrix}</mrow>
          </md>.
        Entonces
        <me permid="cgB">
          \sigma \tau
          =
          \begin{pmatrix}
          1 &amp; 2 &amp; 3 &amp; 4 \\
          1 &amp; 4 &amp; 3 &amp; 2
          \end{pmatrix}
        </me>,
        pero
        <me permid="InK">
          \tau \sigma
          =
          \begin{pmatrix}
          1 &amp; 2 &amp; 3 &amp; 4 \\
          3 &amp; 2 &amp; 1 &amp; 4
          \end{pmatrix}
        </me>.
        </p>
      </example>
     </introduction>

    <subsection xml:id="permute-subsection-cycle-notation" permid="gXl">
      <title>Notación cíclica</title>
 
      <p permid="bwH">La notación que hemos usado hasta ahora para representar las permutaciones es engorrosa, para decir lo menos. Para trabajar efectivamente con grupos de permutaciones, necesitaremos un método más expedito de escribir y manipular permutaciones.
    </p>
 
      <p permid="HDQ">Una permutación <m>\sigma \in S_X</m> es un <term>ciclo de largo </term><idx><h>Ciclo</h><h>definición de</h></idx> <m>k</m> si existen elementos <m>a_1, a_2, \ldots, a_k \in X</m> tales que <md permid="UCc">
        <mrow>\sigma( a_1 ) &amp; = a_2</mrow>
        <mrow>\sigma( a_2 ) &amp; = a_3</mrow>
        <mrow>              &amp; \vdots</mrow>
                <mrow>\sigma( a_k ) &amp; = a_1</mrow>
             </md> y <m>\sigma( x) =x</m> para todos los demás elementos <m>x \in X</m>. Escribiremos <m>(a_1, a_2, \ldots, a_k )</m> para denotar al ciclo <m>\sigma</m>. <notation><usage><m>(a_1, a_2, \ldots, a_k )</m></usage><description>ciclo de largo <m>k</m></description></notation> Los ciclos son los bloques básicos para construir todas las permutaciones.
    </p>


 
      <example xml:id="permute-example-cycle-notation" permid="bhZ">
        <p permid="yFD">La permutación
          <me permid="AJl">
            \sigma =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7\\
            6 &amp; 3 &amp; 5 &amp; 1 &amp; 4 &amp; 2 &amp; 7
            \end{pmatrix}
            =
            (1\, 6\, 2\, 3\, 5\, 4 )
          </me>
          es un ciclo de longitud <m>6</m>, mientras que
          <me permid="gQu">
            \tau =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \\
            1 &amp; 4 &amp; 2 &amp; 3 &amp; 5 &amp; 6
            \end{pmatrix}
            =
            (2\, 4\, 3)
          </me>
        es un ciclo de largo <m>3</m>.
    </p>
       
        <p permid="eMM">No toda permutación es  un ciclo. Considere la permutación
          <me permid="MXD">
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \\
            2 &amp; 4 &amp; 1 &amp; 3 &amp; 6 &amp; 5
            \end{pmatrix}
            = (1\, 2\, 4\, 3)(5\, 6)
          </me>.
        Esta permutación de hecho contiene  un ciclo de largo <m>2</m> y un ciclo de largo <m>4</m>.
    </p>
      </example>
 
       <!-- TWJ, 2011/11/20 -->
      <!-- Reworded this example to make cycle multiplication more clear. -->

      <example xml:id="permute-example-cycle-mult" permid="Hpi">
        <p permid="KTV">Es muy simple calcular el producto de ciclos. Supongamos que 
          <me permid="teM">\sigma  = (1 \, 3 \, 5 \, 2 ) \quad \text{y} \quad \tau = (2 \, 5 \, 6)</me>.
        Si pensamos en <m>\sigma</m> como
        <me permid="ZlV">1  \mapsto  3, \qquad
            3  \mapsto  5, \qquad
            5  \mapsto  2, \qquad
            2  \mapsto  1</me>,
        y <m>\tau</m> como
        <me permid="Fte">2  \mapsto  5, \qquad
            5  \mapsto  6, \qquad
            6  \mapsto  2</me>,
        entonces para <m>\sigma \tau</m> recordando que primero debemos aplicar <m>\tau</m> y luego <m>\sigma</m>, debe ser el caso que 
        <me permid="lAn">1  \mapsto  3, \qquad
              3  \mapsto  5, \qquad
              5  \mapsto  6, \qquad
              6  \mapsto  2 \mapsto 1</me>,
        o <m>\sigma \tau =  (1 \, 3 \, 5 \, 6 )</m>.  Si <m>\mu = (1 \, 6 \, 3 \, 4)</m>, entonces <m>\sigma \mu = (1 \, 6 \, 5 \, 2)(3 \, 4)</m>.
    </p>
      </example>

      <p permid="nKZ">Dos ciclos en <m>S_X</m>, <m>\sigma = (a_1, a_2, \ldots, a_k )</m> y <m>\tau = (b_1, b_2, \ldots, b_l )</m>, son <term>disjuntos</term><idx><h>Disjuntos</h><h>ciclos</h></idx> si <m>a_i \neq b_j</m> para todo <m>i</m> y para todo <m>j</m>.
    </p>

      <example xml:id="permute-example-cycles-disjoint" permid="nwr">
        <p permid="rbe">Los ciclos <m>(1 \, 3 \, 5)</m> y <m>(2 \, 7 )</m> son disjuntos; mientras los ciclos <m>(1 \, 3 \, 5)</m> y <m>(3 \, 4 \, 7 )</m> no lo son.  Calculando sus productos, descubrimos que <md permid="RHw">
          <mrow> (1 \, 3 \, 5)(2 \, 7 ) &amp; = (1 \, 3 \, 5)(2 \, 7 )</mrow>
          <mrow> (1 \, 3 \, 5)(3 \, 4 \, 7 ) &amp; = (1 \, 3 \, 4 \, 7 \, 5)</mrow> 
        </md>. El producto de dos ciclos que no son disjuntos a veces se puede reducir a algo menos complicado; el producto de dos ciclos disjuntos no puede ser simplificado.
    </p>
      </example>
 
      <!-- TWJ, 2011/11/20 -->
      <!-- Wording in the first sentence of the proof changed for clarification as suggested by R. Beezer and N. Lander. -->

      <proposition permid="vaQ">
        <statement>
          <p permid="BAj"> Sean <m>\sigma</m> y <m>\tau</m> dos ciclos disjuntos en <m>S_X</m>. Entonces <m>\sigma \tau = \tau \sigma</m>.
    </p>
        </statement>

        <proof permid="NsP">
          <p permid="qrk">Sea <m>\sigma = (a_1, a_2, \ldots, a_k )</m> y <m>\tau = (b_1, b_2, \ldots, b_l )</m>. Debemos mostrar que <m>\sigma \tau(x) = \tau \sigma(x)</m> para todo <m>x \in X</m>. Si <m>x</m> no está en <m>\{ a_1, a_2, \ldots, a_k \}</m> ni en <m>\{b_1, b_2, \ldots, b_l  \}</m>, entonces tanto <m>\sigma</m> como <m>\tau</m> fijan <m>x</m>. Es decir, <m>\sigma(x)=x</m> y <m>\tau(x)=x</m>. Luego, 
          <me permid="xOF">\sigma \tau(x) = \sigma( \tau(x)) = \sigma(x) = x = \tau(x) = \tau( \sigma(x)) =  \tau \sigma(x)</me>. 
          <em>No debemos olvidar que estamos multiplicando las permutaciones de derecha a izquierda,.</em>  Ahora supongamos que <m>x \in \{ a_1, a_2, \ldots, a_k \}</m>. Entonces <m>\sigma( a_i ) = a_{(i \bmod k) + 1}</m>; es decir,
            <md permid="dVO">
              <mrow>a_1 &amp; \mapsto  a_2</mrow>
              <mrow>a_2 &amp; \mapsto  a_3</mrow>
              <mrow>    &amp; \vdots</mrow>
              <mrow>a_{k-1} &amp; \mapsto  a_k</mrow>
              <mrow>a_k &amp; \mapsto  a_1</mrow>
            </md>.
          Pero, <m>\tau(a_i) = a_i</m> pues <m>\sigma</m> y <m>\tau</m> son disjuntos. Por lo tanto,
            <md permid="KcX">
              <mrow> \sigma \tau(a_i) &amp; = \sigma( \tau(a_i))</mrow>
              <mrow>&amp; = \sigma(a_i)</mrow>
              <mrow>&amp; = a_{(i \bmod k)+1}</mrow>
              <mrow>&amp; = \tau( a_{(i \bmod k)+1} )</mrow>
              <mrow>&amp; = \tau( \sigma(a_i) )</mrow>
              <mrow>&amp; = \tau \sigma(a_i)</mrow>
            </md>.
          Similarmente, si <m>x \in \{b_1, b_2, \ldots, b_l  \}</m>, entonces <m>\sigma</m> y <m>\tau</m> también conmutan. </p>
        </proof>
      </proposition>
 
      <theorem permid="OTH">
        <statement>
          <p permid="QJh">Toda permutación en <m>S_n</m> puede ser escrita como producto de ciclos disjuntos.
    </p>
        </statement> 

        <proof permid="IIW">
          <p permid="Wyt">Podemos suponer que <m>X = \{ 1, 2, \ldots, n \}</m>. Si <m>\sigma \in S_n</m> y definimos <m>X_1</m> como <m>\{ \sigma(1), \sigma^2(1), \ldots \}</m>, entonces el conjunto <m>X_1</m> es finito pues <m>X</m> es finito. Ahora sea <m>i</m> el primer entero en <m>X</m> que no está en <m>X_1</m> y definamos <m>X_2</m> como <m>\{ \sigma(i), \sigma^2(i), \ldots \}</m>. Nuevamente, <m>X_2</m> es un conjunto finito.  Continuando de esta manera, podemos definir conjuntos finitos disjuntos <m>X_3, X_4, \ldots</m>. Como <m>X</m> es un conjunto finito, estamos seguros que este proceso terminará y que habrá un número finito de estos conjuntos, digamos <m>r</m>. Si <m>\sigma_i</m> es el ciclo definido por 
            <me permid="qkg">
              \sigma_i( x ) = 
              \begin{cases}
              \sigma( x ) &amp; x \in X_i \\
              x   &amp; x \notin X_i
              \end{cases}
            </me>,
          entonces <m>\sigma = \sigma_1 \sigma_2 \cdots \sigma_r</m>. Como los conjuntos <m>X_1, X_2, \ldots, X_r</m> son disjuntos, los ciclos <m>\sigma_1, \sigma_2, \ldots, \sigma_r</m> también lo son.
    </p>
        </proof>
      </theorem>
 
      <example xml:id="permute-example-cycle-products" permid="TDA">
        <p permid="Xin">Sean
          <md permid="Wrp">
            <mrow>\sigma &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \\
            6 &amp; 4 &amp; 3 &amp; 1 &amp; 5 &amp; 2
            \end{pmatrix}</mrow>
            <mrow>\tau &amp; =
            \begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 \\
            3 &amp; 2 &amp; 1 &amp; 5 &amp; 6 &amp; 4
            \end{pmatrix}</mrow>
          </md>.
          Using cycle notation, we can write
          <md permid="Cyy">
            <mrow>\sigma      &amp; = (1 \, 6 \, 2 \, 4)</mrow>
            <mrow>\tau        &amp; = (1 \, 3)(4 \, 5 \,6)</mrow>
            <mrow>\sigma \tau &amp; = (1 \, 3\,  6) ( 2\,  4\, 5)</mrow>
            <mrow>\tau \sigma &amp; = (1 \, 4\,  3 )(2 \, 5 \, 6)</mrow>
          </md>.
    </p>
      </example>
 
      <remark permid="zKJ">
        <p permid="HZp">Desde ahora nos resultará conveniente usar la notación cíclica para representar las permutaciones. Cuando usemos la notación cíclica, frecuentemente representaremos la permutación identidad por <m>(1)</m>.
    </p>
      </remark>

    </subsection>

    <subsection xml:id="permute-subsection-transpositions" permid="Neu">
      <title>Transposiciones</title>

      <p permid="TSi">La permutación (no trivial) más simple es un ciclo de largo <m>2</m>.  Tales ciclos se llaman <idx><h>Transposición</h></idx><term>transposiciones</term>. Como 
        <me permid="iFH">
          (a_1, a_2, \ldots, a_n ) = (a_1, a_n ) (a_1, a_{n-1} ) \cdots ( a_1, a_3 ) (a_1, a_2 )
        </me>, cualquier ciclo puede ser escrito como el producto de transposiciones, llevándonos a la siguiente proposición.
    </p>

      <proposition permid="LZb">
        <statement>
          <p permid="hHs">Cualquier permutación de un conjunto finito que contenga al menos dos elementos puede ser escrita como producto de transposiciones. </p>
        </statement>
      </proposition>

      <example xml:id="permute-example-transpositions" permid="Ynt">
        <p permid="Dpw">Considere la permutación
          <me permid="OMQ">
            ( 1 \, 6 ) (2 \,  5\,  3) = (1 \, 6 )( 2 \, 3 )( 2 \, 5 ) = (1 \, 6 )( 4 \, 5 )(2 \, 3 )( 4 \, 5 )(2 \, 5 )
          </me>.
        Como podemos ver, no hay una única forma de representar la permutación como producto de transposiciones. Por ejemplo, podemos escribir la identidad como <m>(1 \, 2 )(1 \, 2 )</m>, como <m>(1 \, 3 )(2 \, 4 )(1 \, 3 )(2 \, 4)</m>, y en muchas otras formas. Sin embargo, resulta ser, que ninguna permutación se puede escribir tanto como un producto de un número par como de un número impar de transposiciones. Por ejemplo, podemos representar la permutación <m>(1 \, 6)</m> por <me permid="uTZ">(2 \, 3 )(1 \, 6)( 2 \, 3)</me> o por <me permid="bbi">(3 \, 5) (1 \, 6) (1 \, 3) (1 \, 6) (1 \, 3) (3 \, 5) (5 \, 6)</me>, pero <m>(1 \, 6)</m> siempre será el producto de un número impar de transposiciones. </p>
      </example>

      <!-- TWJ, 2010/03/31 -->
      <!-- Fixed the error in the equations below so that <m>a</m> gets moved out of the last transposition -->

      <lemma xml:id="permute-lemma-identity-even-trans" permid="sgk">
        <statement>
          <p permid="acT">Si la identidad se escribe como el producto de <m>r</m> transposiciones,
            <me permid="Hir">\identity = \tau_1 \tau_2 \cdots \tau_r</me>,
          entonces <m>r</m> es un número par.
    </p>
        </statement>

        <proof permid="ZHh">
          <p permid="CFC">Procederemos por inducción en <m>r</m>.  Una transposición no puede ser la identidad; luego,   <m>r \gt 1</m>. Si <m>r=2</m>, estamos listos. Supongamos que <m>r \gt 2</m>. En este caso el producto de al menos dos de estas transposiciones, <m>\tau_{r-1} \tau_r</m>, debe estar en uno de los casos siguientes: <md permid="npA">
            <mrow>(a, b)(a, b) &amp; = \identity</mrow>
            <mrow>(b, c)(a, b) &amp; = (a, c)(b, c)</mrow>
            <mrow>(c, d)(a, b) &amp; = (a, b)(c, d)</mrow>
            <mrow>(a, c)(a, b) &amp; = (a, b)(b, c)</mrow>
          </md>, donde <m>a</m>, <m>b</m>, <m>c</m>, y <m>d</m> son distintos.
    </p>

          <p permid="iML">La primera ecuación simplemente dice que una transposición es su propia inversa. Si ocurre este caso, borre <m>\tau_{r-1} \tau_r</m> del producto para obtener
            <me permid="TwJ"> \identity = \tau_1 \tau_2 \cdots \tau_{r - 3} \tau_{r - 2}</me>.
          Por inducción <m>r - 2</m> es par; luego, <m>r</m> debe ser par.
    </p>
         
          <p permid="OTU">En cada uno de los otros tres casos, podemos reemplazar <m>\tau_{r - 1} \tau_r</m> con el lado derecho de la ecuación correspondiente para obtener un nuevo producto de <m>r</m> transposiciones para la identidad. En este nuevo producto, la última aparición de <m>a</m> será en la penúltima transposición. Podemos continuar este proceso con <m>\tau_{r - 2} \tau_{r - 1}</m> para obtener ya sea un producto de <m>r - 2</m> transposiciones o un nuevo producto de <m>r</m> transposiciones donde la última aparición de <m>a</m> es en <m>\tau_{r - 2}</m>. Si la identidad es el producto de <m>r - 2</m> transposiciones, entonces nuevamente estamos listos, por la hipótesis de inducción; de otro modo, repetiremos el procedimiento con <m>\tau_{r - 3} \tau_{r - 2}</m>.
    </p>

          <p permid="vbd">En algún momento, tendremos dos transposiciones adyacentes iguales, que se cancelarán o <m>a</m> solamente estará presente en la primera transposición. Pero este último caso no puede ocurrir, pues la identidad no fijaría <m>a</m> en esta situación. Por lo tanto, la identidad debe ser el producto de <m>r-2</m> transposiciones y, nuevamente por la hipótesis de inducción, estamos listos.
    </p>
        </proof>
      </lemma>

      <theorem xml:id="permute-theorem-even-and-odd" permid="fRS">
        <statement>
          <p permid="wQq">Si una permutación <m>\sigma</m> puede ser expresada como el producto de un número par de transposiciones, entonces cualquier otro producto de transposiciones igual a <m>\sigma</m> debe también contener un número par de transposiciones.  De forma similar, si <m>\sigma</m> puede ser expresada como el producto de un número impar de transposiciones, entonces cualquier otro producto de transposiciones igual a <m>\sigma</m> debe también contener un número impar de transposiciones.
    </p>
        </statement> 

        <proof permid="oQf">
          <p permid="bim">Supongamos que <me permid="zDS"> \sigma = \sigma_1 \sigma_2 \cdots \sigma_m = \tau_1 \tau_2 \cdots \tau_n</me>, con <m>m</m> par. Debemos mostrar que <m>n</m> también es un número par.  La inversa de <m>\sigma</m> es <m>\sigma_m \cdots \sigma_1</m>. Como <me permid="fLb"> \identity = \sigma \sigma_m \cdots \sigma_1 = \tau_1  \cdots \tau_n \sigma_m \cdots \sigma_1</me>, <m>n</m> debe ser par por el <xref ref="permute-lemma-identity-even-trans"/>. La demostración del caso en el que <m>\sigma</m> puede ser expresada como el producto de un número impar de transposiciones lo dejamos como ejercicio.
    </p>
        </proof>
      </theorem>

      <!-- Typo corrected.  Suggested by B. Whetter -->
      <!-- TWJ 0212/10/21 -->
 
      <p permid="zZr">A la luz del <xref ref="permute-theorem-even-and-odd"/>, definimos que una permutación es <term>par</term><idx><h>Par</h><h>permutación</h></idx> si puede ser expresada como el producto de un número par de transposiciones e <term>impar</term><idx><h>Impar</h><h>permutación</h></idx> si puede ser expresada como el producto de un número impar de transposiciones.
    </p>
    
    </subsection>

    <subsection xml:id="permute-subsection-alternating-groups" permid="tlD">
      <title>Los Grupos Alternantes</title>

      <p permid="ggA">Uno de los subgrupos más importantes de <m>S_n</m> es el conjunto de todas las permutaciones pares, <m>A_n</m>.  <notation><usage><m>A_n</m></usage><description>el grupo alternante en <m>n</m> símbolos</description></notation> El grupo <m>A_n</m> se llama <idx><h>Alternante</h><h>grupo</h></idx><term>grupo alternante en <m>n</m> símbolos</term>.
    </p>


 
      <theorem permid="EuC">
        <statement>
          <p permid="cXz">El conjunto <m>A_n</m> es un subgrupo de <m>S_n</m>.
    </p>
        </statement>

        <proof permid="UXo">
          <p permid="Hpv">Como el producto de dos permutaciones pares es también una permutación par, <m>A_n</m> es cerrado.  La identidad es una permutación par y por lo tanto está en <m>A_n</m>. Si <m>\sigma</m> es una permutación par, entonces 
            <me permid="LSk">\sigma = \sigma_1 \sigma_2 \cdots \sigma_r</me>,
          donde <m>\sigma_i</m> son transposiciones y  <m>r</m> es par. Como la inversa de una transposición es ella misma, 
            <me permid="rZt">\sigma^{-1} = \sigma_r \sigma_{r-1} \cdots \sigma_1</me>
          también está en <m>A_n</m>.
    </p>
        </proof>
      </theorem>

      <proposition permid="kBL">
        <statement>
          <p permid="NOB">El número de permutaciones pares en <m>S_n</m>, <m>n \geq 2</m>, es igual al número de permutaciones impares; luego, el orden de <m>A_n</m> es <m>n!/2</m>.
    </p>
        </statement>
        
         <proof permid="tzY">
           <p permid="nwE">Sea <m>A_n</m> el conjunto de permutaciones pares en <m>S_n</m> y <m>B_n</m> el conjunto de permutaciones impares.  Si podemos mostrar que existe una biyección entre estos conjuntos, habremos demostrado que contienen el mismo número de elementos. Fijemos una transposición <m>\sigma</m> en <m>S_n</m>.  Como <m>n \geq 2</m>, tal  <m>\sigma</m> existe.  Defina 
             <me permid="YgC">\lambda_{\sigma} : A_n \rightarrow B_n</me>
           como 
             <me permid="EnL">\lambda_{\sigma} ( \tau ) = \sigma  \tau </me>.
           Supongamos que <m>\lambda_{\sigma} ( \tau ) = \lambda_{\sigma} ( \mu )</m>. Entonces <m>\sigma  \tau = \sigma  \mu</m> y así 
             <me permid="kuU"> \tau = \sigma^{-1} \sigma \tau = \sigma^{-1} \sigma \mu = \mu </me>.
           Por lo tanto, <m>\lambda_{\sigma}</m> es 1-1.  Dejaremos la demostración de que <m>\lambda_{\sigma}</m> es sobreyectiva como ejercicio.
    </p>
        </proof>
      </proposition>
 
      <example xml:id="permute-example-s4" permid="QIU">
        <p permid="jwF">El grupo <m>A_4</m> es el subgrupo de <m>S_4</m> que consiste de las permutaciones pares.  Hay doce elementos en <m>A_4</m>: 
          <md permid="QCd">
            <mrow>&amp; (1)    &amp;&amp; (1 \, 2)(3 \, 4) &amp;&amp; (1 \, 3)(2 \, 4) &amp;&amp; (1 \, 4)(2 \, 3) </mrow>
            <mrow>&amp; (1 \, 2 \, 3)  &amp;&amp; (1 \, 3 \, 2)    &amp;&amp; (1 \, 2 \, 4)    &amp;&amp; (1 \, 4 \, 2)    </mrow>
            <mrow>&amp; (1 \, 3 \, 4)  &amp;&amp; (1 \, 4 \, 3)    &amp;&amp; (2 \, 3 \, 4)    &amp;&amp; (2 \, 4 \, 3)</mrow>
          </md>.
        Uno de los ejercicios al final del capítulo será el de encontrar todos los subgrupos de <m>A_4</m>. Descubrirá que no hay ningún subgrupo de orden <m>6</m>.  ¿Le sorprende?</p>
      </example>

    </subsection>
 
    <subsection xml:id="permute-historical-note" permid="ZsM">
      <title>Note Histórica</title>
      
      <p permid="MnJ">Lagrange<idx><h>Lagrange, Joseph-Louis</h></idx> fue el primero en pensar las permutaciones como funciones de un conjunto en sí mismo, pero fue Cauchy quién desarrolló los teoremas básicos y la notación para las permutaciones. Él fue el primero en usar la notación cíclica. Augustin-Louis Cauchy<idx><h>Cauchy, Augustin-Louis</h></idx> (1789<ndash/>1857) nació en París durante en el apogeo de la Revolución Francesa. Su familia dejó París y se fue al pueblo de Arcueil para escapar del Reino del Terror. Uno de los vecinos de la familia allí, fue Pierre-Simon Laplace<idx><h>Laplace, Pierre-Simon</h></idx> (1749<ndash/>1827), quien lo motivó a iniciar una carrera en matemáticas. Cauchy comenzó su carrera como matemático resolviendo un problema de geometría que le planteó Lagrange. Cauchy escribió más de 800 trabajos en diversos tópicos, como ecuaciones diferenciales, grupos finitos, matemáticas aplicadas, y análisis complejo. Fue uno de los matemáticos responsables de hacer que el Cálculo Diferencial fuera riguroso. Es probable que haya más teoremas y conceptos en matemáticas asociados al nombre de Cauchy que al de cualquier otro matemático.
    </p>

    </subsection>
    
  </section>

  <section xml:id="permute-section-dihedral-groups" permid="CFp">
    <title>Grupos Dihedrales</title>
 
    <introduction permid="Qnv">

      <p permid="sQr">Otro tipo especial de grupo de permutaciones es el de los grupos dihedrales. Recordemos el grupo de las simetrías del triángulo equilátero en el Capí<xref ref="groups"/>. Tales grupos consisten de los movimientos rígidos de un polígono regular de <m>n</m> lados o <m>n</m>-ágono regular. Para <m>n = 3, 4, \ldots</m>, definimos el <term>n-ésimo grupo dihedral</term><idx><h>Dihedral</h><h>grupo</h></idx> como el grupo de los movimientos rígidos de n <m>n</m>-ágono regular.  Denotaremos este grupo por  <m>D_n</m>.  <notation><usage><m>D_n</m></usage><description>el grupo dihedral</description></notation> Podemos numerar los vértices de un <m>n</m>-ágono regular con <m>1, 2, \ldots, n</m> (<xref ref="permute-figure-regular"/>).  Note que hay exactamente <m>n</m> posibilidades para reemplazar al primer vértice.  Si reemplazamos al primer vértice por <m>k</m>, entonces el segundo vértice debe ser reemplazado por el vértice <m>k+1</m> o por el vértice <m>k-1</m>; luego, hay <m>2n</m> movimientos rígidos posibles del <m>n</m>-ágono.  Resumimos estos resultados en el siguiente teorema.
    </p>

            <!-- Replaced figure with tikz figure - TWJ 5/7/2010 -->
      <figure xml:id="permute-figure-regular" permid="YXA">
        <caption>Un <m>n</m>-ágono regular</caption>
        <image width="60%" xml:id="permute-ngon" permid="guV">
      <description>Un n-ágono con el vértice 1 en la parte superior, seguido de 2, 3, 4, ..., n - 1, n.</description>
  
        <latex-image>
          <xi:include href="tikz/permute-ngon.tex" parse="text"/>
        </latex-image>
      </image>
      </figure>
   
      <theorem permid="naS">
        <statement>
          <p permid="JeI">
            The dihedral group, <m>D_n</m>,
            is a subgroup of <m>S_n</m> of order <m>2n</m>.
          </p>
        </statement>
      </theorem>

      <theorem xml:id="permute-theorem-dn-generator" permid="Tib">
        <statement>
          <p permid="plR">
            El grupo <m>D_n</m>, <m>n \geq 3</m>, consta de todos los productos de los dos elementos <m>r</m> y <m>s</m>, donde <m>r</m> tiene orden <m>n</m> y <m>s</m> tiene orden <m>2</m>, y estos dos elementos satisfacen la relación <m>srs = r^{-1}</m>.
          </p>
        </statement>

        <proof permid="Bex">
          <p permid="TDN">
            Los posibles movimientos de un <m>n</m>-gon regular son reflexiones o rotaciones. (<xref ref="permute-figure-rotations"/>).
            Hay exactamente <m>n</m> rotaciones posibles:
            <me permid="cQv">
              \identity, \frac{360^{\circ} }{n}, 2 \cdot \frac{360^{\circ} }{n}, \ldots, (n-1) \cdot \frac{360^{\circ} }{n}
            </me>.
            Denotaremos la rotación <m>360^{\circ} /n</m> por <m>r</m>.
            La rotación <m>r</m> genera todas las demás rotaciones.
            Eso es,
            <me permid="IXE">
              r^k = k \cdot \frac{360^{\circ} }{n}
            </me>.
          </p>

          <figure xml:id="permute-figure-rotations" permid="fSf">
            <caption>Rotaciones y reflexiones de un <m>n</m>-ágono regular</caption>
            <image xml:id="permute-motions-ngon" permid="MCe">
              <description>Rotaciones y reflejos de un octágono. Donde el octágono superior (1 (arriba), 2, 3, 4, 5, 6, 7, 8) se gira a un octágono (2 (arriba), 3, 4, 5, 6, 7, 8, 1), y el octágono de abajo (1 (arriba), 2, 3, 4, 5, 6, 7, 8) se refleja alrededor de un eje vertical hacia (1 (arriba), 8, 7, 6, 5, 4, 3, 2 ).</description>

            <latex-image>
                <xi:include href="tikz/permute-motions-ngon.tex" parse="text"/>
            </latex-image>
            </image>

          </figure>

          <p permid="zKW">
            Etiquete las reflexiones <m>n</m> <m>s_1, s_2, \ldots, s_n</m>, donde <m>s_k</m> es la reflexión que sale del vértice <m>k</m> fijado.
            Hay dos casos de reflexiones, dependiendo de si <m>n</m> es par o impar.
            Si hay un número par de vértices, entonces dos vértices quedan fijos mediante una reflexión, y <m>s_1 = s_{n/2 + 1}, s_2 = s_{n/2 + 2}, \ldots, s_{ n/2} = s_n</m>.
            Si hay un número impar de vértices, entonces solo un vértice queda fijo mediante una reflexión y <m>s_1, s_2, \ldots, s_n</m> son distintos (<xref ref="permute-figure-types"/>).
            En cualquier caso, el orden de cada <m>s_k</m> es dos.
            Sea <m>s = s_1</m>.
            Entonces <m>s^2 = 1</m> y <m>r^n = 1</m>.
            Dado que cualquier movimiento rígido <m>t</m> del <m>n</m>-gon reemplaza el primer vértice por el vértice <m>k</m>, el segundo vértice debe ser reemplazado por <m>k+1</m> o por <m>k-1</m>.
            Si el segundo vértice se reemplaza por <m>k+1</m>, entonces <m>t = r^k</m>.
            Si el segundo vértice se reemplaza por <m>k-1</m>, entonces <m>t = r^k s</m>.<fn>Dado que estamos en un grupo abstracto, adoptaremos la convención de que el grupo los elementos se multiplican de izquierda a derecha.</fn>
            Por lo tanto, <m>r</m> y <m>s</m> generan <m>D_n</m>.
            Es decir, <m>D_n</m> consta de todos los productos finitos de <m>r</m> y <m>s</m>,
            <me permid="peN">
              D_n = \{1, r, r^2, \ldots, r^{n-1}, s, rs, r^2 s, \ldots, r^{n-1} s\}
            </me>.
            Dejaremos la demostración de que <m>srs = r^{-1}</m> como ejercicio.
          </p>

          <figure xml:id="permute-figure-types" permid="LZo">
              <caption>Tipos de reflexiones de un <m>n</m>-ágono regular</caption>
              <image xml:id="permute-reflections-ngon" permid="sJn">
                <description>El hexágono superior (1 (arriba), 2, 3, 4, 5, 6) se refleja en (1 (arriba), 6, 5, 4, 3, 2). El pentágono inferior (1 (arriba), 2, 3, 4, 5) se refleja para convertirse en (1 (arriba), 5, 4, 3, 2).</description>

            <latex-image>
                <xi:include href="tikz/permute-reflections-ngon.tex" parse="text"/>
            </latex-image>
              </image>

            </figure>
        </proof>
      </theorem>

      <example xml:id="permute-example-d4-group" permid="LDC">
        <p permid="PDO">El grupo de movimientos rígidos de un cuadrado, <m>D_4</m>, consiste de ocho elementos. Con los vértices numerados <m>1</m>, <m>2</m>, <m>3</m>,
          <m>4</m> (<xref ref="permute-figure-d4"/>), las rotaciones son <md permid="VlW">
            <mrow>r   &amp; = (1 \, 2 \, 3 \, 4)</mrow>
            <mrow>r^2 &amp; = (1 \, 3)(2 \, 4)</mrow>
            <mrow>r^3 &amp; = (1 \, 4 \, 3 \, 2)</mrow>
            <mrow>r^4 &amp; = (1)</mrow>
          </md>
          y los reflejos son
          <md permid="Btf">
            <mrow>s_1 &amp; = (2 \, 4)</mrow>
            <mrow>s_2 &amp; = (1 \, 3)</mrow>
          </md>.
          El orden de <m>D_4</m> es <m>8</m>.
          Los dos elementos restantes son
          <md permid="hAo">
            <mrow>r s_1   &amp; = (1 \, 2)(3 \, 4)</mrow>
            <mrow>r^3 s_1 &amp; = (1 \, 4)(2 \, 3)</mrow>
          </md>.
    </p>
      </example>

      <figure xml:id="permute-figure-d4" permid="vKX">
        <caption>El grupo <m>D_4</m></caption>

        <!-- Replaced with tikz figure and change to a counterclockwise rotation - TWJ 5/8/2010 -->
        <image width="60%" xml:id="permute-dihedral-four" permid="YQw">
            <description>Un cuadrado con ejes de simetría diagonales que conectan vértices opuestos, un eje de simetría horizontal que biseca los dos lados verticales del cuadrado y un eje de simetría vertical que biseca los dos lados horizontales del cuadrado.</description>

            <latex-image>
                <xi:include href="tikz/permute-dihedral-four.tex" parse="text"/>
            </latex-image>
          </image>
      </figure>

    </introduction>

    <subsection xml:id="permute-subsection-motion-group-cube" permid="FzV">
      <title>El grupo de movimientos de un Cubo</title>
 
      <p permid="suS">Podemos investigar los grupos de movimientos de objetos geométricos diferentes de los polígonos de <m>n</m> lados para obtener ejemplos interesantes de grupos de permutaciones. Consideremos el grupo de movimientos rígidos de un cubo. Una de las primeras preguntas que podemos hacer sobre este grupo es <q>¿cuál es su orden?</q>  Un cubo tiene <m>6</m> caras. Si una cara en particular está apuntado hacia arriba, entonces existen cuatro rotaciones posibles del cubo que preservarán la cara apuntando hacia arriba. Luego, el orden del grupo es <m>6 \cdot 4 = 24</m>. Acabamos de demostrar la siguiente proposición.
    </p>

      <proposition xml:id="permute-proposition-motions-cube" permid="cXm">
        <statement>
          <p permid="tVK">El grupo de movimientos rígidos de un cubo contiene <m>24</m> elementos.
    </p>
        </statement>
      </proposition>
 
      <theorem permid="wQd">
        <statement>
          <p permid="Vta">El grupo de movimientos rígidos de un cubo es <m>S_4</m>.
    </p>
        </statement>

        <proof permid="hlG">
          <p permid="sgx">De la <xref ref="permute-proposition-motions-cube"/>, ya sabemos que el grupo de movimientos del cubo tiene <m>24</m> elementos, el mismo número de  elementos que hay en <m>S_4</m>.  Hay exactamente cuatro diagonales en el cubo.  Si etiquetamos estas diagonales con <m>1</m>,
            <m>2</m>, <m>3</m>, y <m>4</m>, debemos mostrar que el grupo de movimientos del cubo nos dará cualquier permutación de las diagonales (<xref ref="permute-figure-motions"/>). Si podemos obtener todas estas permutaciones, entonces <m>S_4</m> y el grupo de movimientos rígidos del cubo tendrán que ser el mismo. Para obtener una transposición, podemos  rotar el cubo en <m>180^{\circ}</m> en torno al eje que une los puntos medios de aristas opuestas (<xref ref="permute-figure-transpose"/>). Hay seis de tales ejes, dando todas las transposiciones en <m>S_4</m>. Como todo elemento en <m>S_4</m> es el producto de un número finito de transposiciones, el grupo de movimientos de un cubo tiene que ser <m>S_4</m>.
    </p>
	<figure xml:id="permute-figure-motions" permid="YnG">
		<caption>El grupo de movimientos de un cubo.</caption>

		<image width="60%" xml:id="permute-motions-cube" permid="EXF">
		  <description>Un cubo donde los vértices superiores están etiquetados como 1, 2, 3, 4 y los vértices inferiores están etiquetados como 3, 4, 1, 2. Las diagonales conectan el vértice 1 en la parte superior con el vértice 1 en la parte inferior, el vértice 2 en la parte superior con el vértice 2 en la parte inferior, vértice 3 en la parte superior con el vértice 3 en la parte inferior y vértice 4 en la parte superior con el vértice 4 en la parte inferior,</description>

		<latex-image>
			<xi:include href="tikz/permute-motions-cube.tex" parse="text"/>
		</latex-image>
		</image>
	  </figure>
<!--

	  <figure xml:id="permute-figure-transpose" permid="EuP">
		<caption>Transpositions in the motion group of a cube</caption>
		<image xml:id="permute-transpositions-cube" permid="leO">
		  <description>Two cubes where the top vertices of the first cube are labeled 1, 2, 3, 4 and the bottom vertices are labled 3, 4, 1, 2 and the top vertices of the second cube are labled 2, 1, 3, 4 and the bottom vertices are labeled 3, 4, 2, 1.  Lines of symmetry connect the 12 edge on top with the 12 edge on the bottom in both cubes.</description>

		<latex-image>
			<xi:include href="tikz/permute-transpositions-cube.tex" parse="text"/>
		</latex-image>
		</image>

	  </figure>
-->

  <figure xml:id="permute-figure-transpose" permid="EuP">
	<caption>Transposiciones en el grupo de movimientos de un cubo.</caption>
		
	<sidebyside width="40%" margins="auto" valign="middle">
	  <image xml:id="permute-transpositions-cube-left" permid="leOa">
		<description>Los vértices superiores del cubo izquierdo están etiquetados 1, 2, 3, 4 y los vértices inferiores están etiquetados 3, 4, 1, 2. Las líneas de simetría conectan el borde 12 en la parte superior con el borde 12 en la parte inferior.</description>
		  <latex-image>
			  <xi:include href="tikz/permute-transpositions-cube-left.tex" parse="text"/>
		  </latex-image>
	  </image>

	  <image xml:id="permute-transpositions-cube-right" permid="leOb">
		<description>Los vértices superiores del cubo derecho están etiquetados como 2, 1, 3, 4 y los vértices inferiores están etiquetados como 3, 4, 2, 1. Los ejes de simetría conectan el borde 12 en la parte superior con el borde 12 en la parte inferior.</description>
		  <latex-image>
			  <xi:include href="tikz/permute-transpositions-cube-right.tex" parse="text"/>
		  </latex-image>
	  </image>
	</sidebyside>

  </figure>

	</proof>
  </theorem>
 

      <paragraphs component="sage-blurb" permid="qqX">
        <title>Sage</title>
      
        <p permid="YCb">Un grupo de permutaciones es una representación muy concreta de un grupo, y la herramientas de Sage para trabajar con grupos de permutaciones son muy buenas <mdash/> convirtiendo a Sage en un lugar natural para que principiantes aprendan sobre teoría de grupos.
    </p>
      </paragraphs>

    </subsection>

  </section>

  <reading-questions permid="HJQ">

    <exercise permid="Cbi">
      <statement>
        <p permid="GLb">
          Exprese <m>(1\,3\,4)(3\,5\,4)</m> como un ciclo o un producto de ciclos disjuntos.
          (Interprete la composición de funciones en el orden utilizado por Sage, que es el orden inverso al utilizado en el libro).
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise permid="iir">
      <statement>
        <p permid="mSk">
          ¿Qué es una transposición?
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise permid="OpA">
      <statement>
        <p permid="SZt">
          ¿Qué significa que una permutación sea par o impar?
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise permid="uwJ">
      <statement>
        <p permid="zgC">
          Describa otro grupo que sea fundamentalmente igual a <m>A_3</m>.
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise permid="aDS">
      <statement>
        <p permid="fnL">
          Escriba los elementos del grupo de simetría de un pentágono usando permutaciones en notación cíclica.
          Haga este ejercicio a mano y sin la ayuda de Sage.
        </p>
      </statement>
      <response/>
    </exercise>

  </reading-questions>

  <exercises xml:id="permute-exercises" filenamebase="permute" permid="ecF">
    <title>Ejercicios</title>
  
    <exercise number="1" permid="Jev" xml:id="permute-exercise-cycle-notation">
      <statement>
        <p permid="xAk">Escriba las siguientes permutaciones en notación cíclica.
          <ol cols="2" permid="xOs">
   
            <li permid="ZVC"><p permid="vih"><me permid="NHx">\begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            2 &amp; 4 &amp; 1 &amp; 5 &amp; 3
            \end{pmatrix}</me></p></li>
  
            <li permid="GcL"><p permid="bpq"><me permid="tOG">\begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            4 &amp; 2 &amp; 5 &amp; 1 &amp; 3
            \end{pmatrix}</me></p></li>
  
            <li permid="mjU"><p permid="Hwz"><me permid="ZVP">\begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            3 &amp; 5 &amp; 1 &amp; 4 &amp; 2
            \end{pmatrix}</me></p></li>
  
            <li permid="Srd"><p permid="nDI"><me permid="GcY">\begin{pmatrix}
            1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 \\
            1 &amp; 4 &amp; 3 &amp; 2 &amp; 5
            \end{pmatrix}</me></p></li>
  
          </ol></p>
      </statement>
      <hint permid="lVz">
        <p permid="AQp">(a) <m>(1 \, 2 \, 4 \, 5 \, 3)</m>; (c) <m>(1 \, 3)(2 \, 5)</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="2" permid="plE" xml:id="permute-exercise-cycle-products">
    <statement>
      <p permid="dHt">Escriba cada una de las siguientes como producto de ciclos disjuntos.
        <ol cols="2" permid="dVB">
          <li permid="yym">
            <p permid="TKR">
              <m>(1 \, 3 \, 4 \, 5)(2 \, 3 \, 4)</m>
            </p>
          </li>

          <li permid="eFv">
            <p permid="zSa">
              <m>(1 \, 2)(1 \, 2 \, 5 \, 3)</m>
            </p>
          </li>

          <li permid="KME">
            <p permid="fZj">
              <m>(1 \, 4 \, 3)(2 \, 3)(2 \, 4)</m>
            </p>
          </li>

          <li permid="qTN">
            <p permid="Mgs">
              <m>(1 \, 4 \, 2 \, 3)(3 \, 4)(5 \, 6)(1 \, 3 \, 2 \, 4)</m>
            </p>
          </li>

          <li permid="XaW">
            <p permid="snB">
              <m>(1 \, 2 \, 5 \, 4)(1 \, 3)(2 \, 5)</m>
            </p>
          </li>

          <li permid="Dif">
            <p permid="YuK">
              <m>(1 \, 2 \, 5 \, 4) (1 \, 3)(2 \, 5)^2</m>
            </p>
          </li>

          <li permid="jpo">
            <p permid="EBT">
              <m>(1 \, 2 \, 5 \, 4)^{-1} (1 \, 2 \, 3)(4 \, 5) (1 \, 2 \, 5 \, 4)</m>
            </p>
          </li>

          <li permid="Pwx">
            <p permid="kJc">
              <m>(1 \, 2 \, 5 \, 4)^2 (1 \, 2 \, 3)(4 \, 5)</m>
            </p>
          </li>

          <li permid="vDG">
            <p permid="QQl">
              <m>(1 \, 2 \, 3)(4 \, 5) (1 \, 2 \, 5 \, 4)^{-2}</m>
            </p>
          </li>

          <li permid="bKP">
            <p permid="wXu">
              <m>(1 \, 2 \, 5 \, 4)^{100}</m>
            </p>
          </li>

          <li permid="HRY">
            <p permid="deD">
              <m>|(1 \, 2 \, 5 \, 4)|</m>
            </p>
          </li>

          <li permid="nZh">
            <p permid="JlM">
              <m>|(1 \, 2 \, 5 \, 4)^2|</m>
            </p>
          </li>

          <li permid="Ugq">
            <p permid="psV">
              <m>(1 \, 2)^{-1}</m>
            </p>
          </li>

          <li permid="Anz">
            <p permid="VAe">
              <m>(1 \, 2 \, 5 \, 3 \, 7)^{-1}</m>
            </p>
          </li>

          <li permid="guI">
            <p permid="BHn">
              <m>[(1 \, 2)(3 \, 4)(1 \, 2)(4 \, 7)]^{-1}</m>
            </p>
          </li>

          <li permid="MBR">
            <p permid="hOw">
              <m>[(1 \, 2 \, 3 \, 5)(4 \, 6 \, 7)]^{-1}</m>
            </p>
          </li>
        </ol>
      </p>
  
      </statement>
      <hint permid="yjR">
        <p permid="gXy">
          (a) <m>(1 \, 3 \, 5)(2 \, 4)</m>; (c) <m>(1 \, 4)(2 \, 3)</m>; (e) <m>(1 \, 3 \, 2 \, 4)</m>; (g) <m>(1 \, 3 \, 4)(2 \, 5)</m>; (n) <m>(1 \, 7 \, 3 \, 5 \, 2)</m>.
        </p>
      </hint>
      
    </exercise>
  
    <exercise number="3" permid="VsN" xml:id="permute-exercise-product-transpositions">
      <statement>
        <p permid="JOC">Exprese las siguientes permutaciones como producto de transposiciones e identifíquelas como pares o impares.
          <ol cols="2" permid="KcK">
            <li permid="sJa">
              <p permid="NVF">
                <m>(1 \, 4 \, 3 \, 5 \, 6)</m>
              </p>
            </li>

            <li permid="YQj">
              <p permid="ucO">
                <m>(1 \, 5 \, 6)(2 \, 3 \, 4)</m>
              </p>
            </li>

            <li permid="EXs">
              <p permid="ajX">
                <m>(1 \, 4 \, 2 \, 6)(1 \, 4 \, 2)</m>
              </p>
            </li>

            <li permid="leB">
              <p permid="Grg">
                <m>(1 \, 7 \, 2 \, 5 \, 4)(1 \, 4 \, 2 \, 3)(1 \, 5 \, 4 \, 6 \, 3 \, 2)</m>
              </p>
            </li>

            <li permid="RlK">
              <p permid="myp">
                <m>(1 \, 4 \, 2 \, 6 \, 3 \, 7)</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint permid="Kyj">
        <p permid="NeH">
          (a) <m>(1 \, 6)(1 \, 5)(1 \, 3)(1 \, 4)</m>; (c) <m>(1 \, 6)(1 \, 4)(1 \, 2)</m>.
        </p>
      </hint>
      
    </exercise>
  
    <exercise number="4" permid="BzW" xml:id="permute-exercise-inverse-cycle">
      <statement>
        <p permid="pVL">Encuentre <m>(a_1, a_2, \ldots, a_n)^{-1}</m>.
    </p>
      </statement>
      <hint permid="WMB">
        <p permid="tlQ"><m>(a_1, a_2, \ldots, a_n)^{-1} = (a_1, a_{n}, a_{n-1}, \ldots, a_2)</m></p>
      </hint>
      
    </exercise>
  
    <exercise number="5" permid="hHf" xml:id="permute-exercise-subgroups-S4">
      <statement>
        <p permid="WcU">Liste todos los subgrupos de <m>S_4</m>. Encuentre cada uno de los siguientes conjuntos. 
          <ol permid="qjT">
   
            <li permid="xsT"><p permid="SFy"><m>\{ \sigma \in S_4 : \sigma(1) = 3 \}</m></p></li>
             
            <li permid="dAc"><p permid="yMH"><m>\{ \sigma \in S_4 : \sigma(2) = 2 \}</m></p></li>
             
            <li permid="JHl"><p permid="eTQ"><m>\{ \sigma \in S_4 : \sigma(1) = 3</m> y <m>\sigma(2) = 2 \}</m></p></li>
   
          </ol>
        ¿Es alguno de estos conjuntos un subgrupo de <m>S_4</m>?</p>
      </statement>
      <hint permid="jaT">
        <p permid="ZsZ">
          (a) <m>\{ (1 \, 3), (1 \, 3)(2 \, 4), (1 \, 3 \, 2), (1 \, 3 \, 4), (1 \, 3 \, 2 \, 4), (1 \, 3 \, 4 \, 2) \}</m> is not a subgroup.
        </p>
      </hint>
      
    </exercise>
  
    <exercise number="6" permid="NOo" xml:id="permute-exercise-subgroups-A4">
      <statement>
        <p permid="Ckd">Encuentre todos los subgrupos de <m>A_4</m>. ¿Cuál es el orden de cada uno de ellos?</p>
      </statement>
      
    </exercise>
  
    <exercise number="7" permid="tVx" xml:id="permute-exercise-order-elements-S7-A7">
      <statement>
        <p permid="irm">Encuentre todos los posibles órdenes de elementos en <m>S_7</m> y en <m>A_7</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="8" permid="acG" xml:id="permute-exercise-A10-element-15">
      <statement>
        <p permid="Oyv">Muestre que <m>A_{10}</m> contiene un elemento de orden <m>15</m>.
    </p>
      </statement>
      <hint permid="HDD">
        <p permid="FAi">
          <m>(1 \, 2 \, 3 \, 4 \, 5)(6 \, 7 \, 8)</m>.
        </p>
      </hint>
      
    </exercise>
  
    <exercise number="9" permid="GjP" xml:id="permute-exercise-A8-element-26">
      <statement>
        <p permid="uFE">¿Contiene <m>A_8</m> un elemento de orden <m>26</m>?</p>
      </statement>
      
    </exercise>
  
    <exercise number="10" permid="mqY" xml:id="permute-exercise-largest-order-Sn">
      <statement>
        <p permid="aMN">Encuentre un elemento de orden maximal en <m>S_n</m> para <m>n = 3, \ldots, 10</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="11" permid="Syh" xml:id="permute-exercise-cycle-structures-A5">
      <statement>
        <p permid="GTW">¿Cuáles son las posibles estructuras de ciclos de los elementos de <m>A_5</m>? ¿Y de <m>A_6</m>?</p>
      </statement>
      <hint permid="ggn">
        <p permid="lHr">Permutaciones de la forma 
          <me permid="mkh">(1), (a_1, a_2)(a_3, a_4), (a_1, a_2, a_3), (a_1, a_2, a_3, a_4, a_5)</me>
        son posibles en <m>A_5</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="12" permid="yFq" xml:id="permute-exercise-order-sigma-i">
      <statement>
        <p permid="nbf">Sea <m>\sigma \in S_n</m> un elemento de orden <m>n</m>. Muestre que para todos los enteros <m>i</m> y <m>j</m>, <m>\sigma^i = \sigma^j</m> si y solo si <m>i \equiv j \pmod{n}</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="13" xml:id="permute-exercise-order-product-cycles" permid="eMz">
      <statement>
        <p permid="Tio">Sea <m>\sigma = \sigma_1 \cdots \sigma_m \in S_n</m> el producto disjunto de ciclos. Demuestre que el orden de <m>\sigma</m> es el mínimo común múltiplo de los largos de los ciclos <m>\sigma_1, \ldots, \sigma_m</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="14" permid="KTI" xml:id="permute-exercise-elements-D5">
      <statement>
        <p permid="zpx">Usando notación cíclica, liste los elementos en <m>D_5</m>.  ¿Cuáles son <m>r</m> y <m>s</m>?  Escriba todo elemento como producto de <m>r</m> y <m>s</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="15" permid="raR" xml:id="permute-exercise-diagonals-cube">
      <statement>
        <p permid="fwG">Si las diagonales de un cubo están etiquetadas como en la <xref ref="permute-figure-motions"/>, ¿a qué movimiento del cubo corresponde la permutación <m>(12)(34)</m>? ¿Y las otras permutaciones de las diagonales?</p>
      </statement>
      
    </exercise>
  
    <exercise number="16" permid="Xia" xml:id="permute-exercise-rigid-motions-tetrahedron">
      <statement>
        <p permid="LDP">Encuentre el grupo de movimientos rígidos de un tetraedro.  Muestre que este es el mismo grupo que <m>A_4</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="17" permid="Dpj" xml:id="permute-exercise-Sn-nonabelian">
      <statement>
        <p permid="rKY">Demuestre que <m>S_n</m> es no abeliano para <m>n \geq 3</m>.
    </p>
      </statement>
      <hint permid="xey">
        <p permid="ROA">Calcule <m>(1 \, 2 \, 3)(1 \, 2)</m> and <m>(1 \, 2)(1 \, 2 \, 3)</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="18" permid="jws" xml:id="permute-exercise-An-nonabelian">
      <statement>
        <p permid="XSh">Muestre que  <m>A_n</m> es no abeliano para <m>n \geq 4</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="19" permid="PDB" xml:id="permute-exercise-Dn-nonabelian">
      <statement>
        <p permid="DZq">Demuestre que <m>D_n</m> es no abeliano para <m>n \geq 3</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="20" xml:id="permute-exercise-cycle-n-1-transpositions" permid="vKK">
      <statement>
        <p permid="kgz">Sea <m>\sigma \in S_n</m> un ciclo. Demuestre que <m>\sigma</m> puede ser escrito como el producto de a lo más <m>n-1</m> transposiciones.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="21" permid="bRT" xml:id="permute-exercise-sigma-n-2-transpositions">
      <statement>
        <p permid="QnI">Sea <m>\sigma \in S_n</m>. Si <m>\sigma</m> no es un ciclo, demuestre que <m>\sigma</m> puede ser escrita como el producto de a lo más <m>n-2</m> transposiciones.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="22" permid="HZc" xml:id="permute-exercise-sigma-odd">
      <statement>
        <p permid="wuR">Si <m>\sigma</m> puede ser expresada como un producto de un número par de transposiciones, muestre que cualquier otro producto de transposiciones que sea igual a <m>\sigma</m> también debe contener un número impar de estas.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="23" permid="ogl" xml:id="permute-exercise-sigma-squared-cycle">
      <statement>
        <p permid="cCa">Si <m>\sigma</m> es un ciclo de largo impar, demuestre que <m>\sigma^2</m> también es un ciclo.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="24" permid="Unu" xml:id="permute-exercise-3-cycle-even">
      <statement>
        <p permid="IJj">Muestre que un <m>3</m>-ciclo es una permutación par.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="25" permid="AuD" xml:id="permute-exercise-An-product-3-cycles">
      <statement>
        <p permid="oQs">Demuestre que en <m>A_n</m> con <m>n \geq 3</m>, culaquier permutación es un producto de ciclos de largo <m>3</m>.
    </p>
      </statement>
      <hint permid="arb">
        <p permid="xVJ">Considere los casos <m>(a,b)(b,c)</m> y <m>(a,b)(c,d)</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="26" permid="gBM" xml:id="permute-exercise-Sn-product-certain-cycles">
      <statement>
        <p permid="UXB">Demuestre que todo elemento en <m>S_n</m> puede ser escrito como un producto finito de las siguientes permutaciones.
          <ol permid="Wrc">
       
            <li permid="ijV"><p permid="ZeE"><m>(1 \, 2), (1 \, 3), \ldots, (1 \, n)</m></p></li>
       
            <li permid="Ore"><p permid="FlN"><m>(1 \, 2), (2 \, 3), \ldots, (n- 1,n)</m></p></li>
       
            <li permid="uyn"><p permid="lsW"><m>(1 \, 2), (1 \, 2 \ldots n )</m></p></li>
       
          </ol></p>
      </statement>
      
    </exercise>
  
    <exercise number="27" permid="MIV" xml:id="permute-exercise-lambda-g-permutation">
      <statement>
        <p permid="BeK">Sea <m>G</m> un grupo y sea <m>\lambda_g : G \rightarrow G</m> una función definida por <m>\lambda_g(a) = g a</m>. Demuestre que <m>\lambda_g</m> es una permutación de <m>G</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="28" permid="sQe" xml:id="permute-exercise-n-factorial-permutations">
      <statement>
        <p permid="hlT">Demuestre que existen <m>n!</m> permutaciones de un conjunto con <m>n</m> elementos.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="29" permid="YXn" xml:id="permute-exercise-center-Dn">
    <statement>
      <p permid="Ntc">Recuerde que el <term>centro</term> de un grupo <m>G</m> es
        <me permid="eFI">Z(G) = \{ g \in G : gx = xg \text{ para todo } x \in G \}</me>.
      Encuentre el centro de <m>D_8</m>. ¿Y el centro de <m>D_{10}</m>? ¿Cuál es el  centro de <m>D_n</m>? </p>
    </statement>
    <hint>
      <p>Show that the center of <m>D_n</m> consists of the identity if <m>n</m> is odd and consists of the identity and a <m>180^\circ</m> rotation if <m>n</m> is even.</p>
    </hint>
    
    </exercise>
  
    <exercise number="30" permid="Few" xml:id="permute-exercise-conjugate-cycle">
      <statement>
        <p permid="tAl">Sea <m>\tau = (a_1, a_2, \ldots, a_k)</m> un ciclo de largo <m>k</m>.
          <ol permid="Cyl">
   
            <li permid="TaX"><p permid="JVG">Demuestre que si <m>\sigma</m> es cualquier permutación, entonces
              <me permid="Xbj">\sigma \tau \sigma^{-1 } = ( \sigma(a_1), \sigma(a_2), \ldots, \sigma(a_k))</me>
            es un ciclo de largo <m>k</m>.
    </p></li>
   
            <li permid="zig"><p permid="qcP">Sea <m>\mu</m> un ciclo de largo <m>k</m>. Demuestre que existe una permutación <m>\sigma</m> tal que <m>\sigma \tau \sigma^{-1 } = \mu</m>.
    </p></li>
   
          </ol></p>
      </statement>
      <hint permid="Lid">
        <p permid="ecS">Para la parte (a), muestre que <m>\sigma \tau \sigma^{-1 }(\sigma(a_i)) = \sigma(a_{i + 1})</m>.
    </p>
      </hint>
      
    </exercise>
  
    <exercise number="31" permid="llF" xml:id="permute-exercise-conjugate-cycles-equivalence-relation">
      <statement>
        <p permid="ZHu">Para <m>\alpha</m> y <m>\beta</m> en <m>S_n</m>, defina <m>\alpha \sim \beta</m> si existe <m>\sigma \in S_n</m> tal que <m>\sigma \alpha \sigma^{-1} = \beta</m>.  Muestre que <m>\sim</m> es una relación de equivalencia en <m>S_n</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="32" permid="RsO" xml:id="permute-exercise-SX-equivalence-relation">
      <statement>
        <p permid="FOD">Sea <m>\sigma \in S_X</m>. Si <m>\sigma^n(x) = y</m> para algún <m>n \in \mathbb Z</m>,, diremos que <m>x \sim y</m>. 
          <ol permid="iFu">
   
            <li permid="rDH"><p permid="iyq">Muestre que <m>\sim</m> es una relación de equivalencia en <m>X</m>.
    </p></li>
   
            <li permid="DRZ"><p permid="uMI">Defina la <term>órbita</term> de <m>x \in X</m> bajo <m>\sigma \in S_X</m> como el conjunto 
              <me permid="vDT">{\mathcal O}_{x, \sigma} = \{ y : x \sim y  \}</me>.
            Calcule las órbitas de cada uno de los siguientes elementos en <m>\{1, 2, 3, 4, 5\}</m> bajo cada uno de los siguientes elementos en <m>S_5</m>:
              <md permid="bLc">
                <mrow>\alpha &amp; = (1 \, 2 \, 5 \, 4)</mrow>
                <mrow>\beta &amp; = (1 \, 2 \, 3)(4 \, 5)</mrow>
                <mrow>\gamma &amp; = (1 \, 3)(2 \, 5)</mrow>
              </md>.
    </p></li>
   
            <li permid="jZi"><p permid="aTR">Si <m>{\mathcal O}_{x, \sigma} \cap {\mathcal O}_{y, \sigma} \neq \emptyset</m>, demuestre que <m>{\mathcal O}_{x, \sigma} = {\mathcal O}_{y, \sigma}</m>. Las órbitas bajo una permutación <m>\sigma</m> son las clases de equivalencia correspondientes a la relación <m>\sim</m>.
    </p></li>
  
            <li permid="Qgr"><p permid="Hba">Un subgrupo <m>H</m> de <m>S_X</m> es <term>transitivo</term> si para cada <m>x, y \in X</m>, existe un <m>\sigma \in H</m> tal que <m>\sigma(x) = y</m>. Demuestre que <m>\langle \sigma \rangle</m> es transitivo si y solo si <m>{\mathcal O}_{x, \sigma} = X</m> para algún <m>x \in X</m>.
    </p></li>
   
           </ol></p>
      </statement>
      
    </exercise>
  
    <exercise number="33" permid="xzX" xml:id="permute-exercise-center-Sn">
      <statement>
        <p permid="lVM">Sea <m>\alpha \in S_n</m> con <m>n \geq 3</m>. Si <m>\alpha \beta = \beta \alpha</m> para todo <m>\beta \in S_n</m>, demuestre que <m>\alpha</m> debe ser la permutación identidad; luego, el centro de <m>S_n</m> es el subgrupo trivial.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="34" xml:id="permute-exercise-inverse-even" permid="dHg">
      <statement>
        <p permid="ScV">Si <m>\alpha</m> es par, demuestre que <m>\alpha^{-1}</m> también es par. ¿Hay un resultado análogo si <m>\alpha</m> es impar?</p>
      </statement>
      
    </exercise>
  
    <exercise number="35" xml:id="permute-exercise-conjugate-An">
      <statement>
        <p>
          Si <m>\sigma \in A_n</m> y <m>\tau \in S_n</m>,
          muestre que <m>\tau^{-1} \sigma \tau \in A_n</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="36" permid="JOp" xml:id="permute-exercise-a-1-b-1-ab-even">
      <statement>
        <p permid="yke">Muestre que <m>\alpha^{-1} \beta^{-1} \alpha \beta</m> es par para todo <m>\alpha, \beta \in S_n</m>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="37" permid="pVy" xml:id="permute-exercise-Dn-relations">
      <statement>
        <p permid="ern">Sean <m>r</m> y <m>s</m> los elementos en <m>D_n</m> descritos en el <xref ref="permute-theorem-dn-generator"/>.
          <ol permid="OMD">
   
            <li permid="AXt"><p permid="rSc">Muestre que <m>srs = r^{-1}</m>.
    </p></li>
             
            <li permid="heC"><p permid="XZl">Muestre que <m>r^k s = s r^{-k}</m> en <m>D_n</m>.
    </p></li>
             
            <li permid="NlL"><p permid="Egu">Demuestre que el orden de <m>r^k \in D_n</m> es <m>n / \gcd(k,n)</m>.
    </p></li>
    
          </ol></p>
      </statement>
      
    </exercise>
  
  </exercises>
  <section xml:id="permute-sage" component="sage-info" permid="iMy">
    <title>Sage</title>
  
    <introduction permid="wuE">
      <p permid="FeJ">Una buena parte de de la implementación de teoría de grupos en Sage está basada en rutinas de <acro>GAP</acro> (Groups, Algorithms, and Programming) en <url href="http://www.gap-system.org/" visual="www.gap-system.org">www.gap-system.org</url>, que está incluido en cada copia de Sage.  Este es un paquete de código abierto maduro, que existe desde 1986. (Reenviar referencia aquí a la consola <acro>GAP</acro>, etc.)
    </p>
  
      <p permid="llS">Como hemos visto, los grupos pueden ser descritos de muchas maneras diferentes, tales como conjuntos de matrices, conjuntos de números complejos, o conjuntos de símbolos sujetos a ciertas relaciones.  Una manera muy concreta de repersentar grupos es vía permutaciones (funciones biyectivas de los enteros del <m>1</m> al <m>n</m>), usando la composición de funciones como la operación en el grupo.  Sage tiene muchas rutinas diseñadas para trabajar con grupos de este tipo y son también una buena forma para que las personas que quieran aprender teoría de grupos ganen experiencia con las ideas básicas de la teoría de grupos.  Por estas dos razones, nos concentraremos en este tipo de grupos.
    </p>
    </introduction>
  
    <subsection permid="lHe">
      <title>Grupos de Permutaciones y sus Elementos</title>
  
      <p permid="EJk">La forma más fácil de trabajar con elementos de grupos de permutación en Sage es escribirlos con notación cíclica.  Como estos son productos de ciclos disjuntos (que conmutan), no necesitamos preocuparnos por el orden en que aparecen los ciclos.  Si escribimos <c>(1,3)(2,4)</c> probablemente entenderemos que se trata de una permutación (el contenido de este capítulo!) y sabemos que podría ser un elemento de <m>S_4</m>, o quizás de un grupo simétrico en más de 4 símbolos.  Sage no puede comenzar tan fácilmente y necesita un poco de contexto, así es que coercionamos una cadena de caracteres escritos con notación de ciclos a pertenecer a un grupo simétrico para producir elementos del grupo.  A continuación algunos ejemplos y cálculos de muestra.  Recuerde que Sage y el texto difieren en el orden usado para componer dos permutaciones en un producto.
    </p>
  
      <sage permid="pNd">
        <input>
        G = SymmetricGroup(5)
        sigma = G("(1,3)(2,5,4)")
        sigma*sigma
        </input>
        <output>(2,4,5)</output>
      </sage>
  
      <sage permid="VUm">
        <input>
        rho = G("(2,4)(1,5)")
        rho^3
        </input>
        <output>(1,5)(2,4)</output>
      </sage>
  
      <p permid="kQt">Si los próximos tres ejemplos parecen confusos, o <q>al revés</q>, entonces sería un buen momento para revisar la discusión respecto al orden de la composición de permutaciones en Sage hecha en la subsecció<xref ref="groups-subsection-groups-of-symmetries" text="title"/>.
    </p>
  
      <sage permid="Cbv">
        <input>sigma*rho</input>
        <output>(1,3,5,2)</output>
      </sage>
  
      <sage permid="iiE">
        <input>rho*sigma</input>
        <output>(1,4,5,3)</output>
      </sage>
  
      <sage permid="OpN">
        <input>rho^-1*sigma*rho</input>
        <output>(1,2,4)(3,5)</output>
      </sage>
  
      <p permid="QXC">Hay formas alternativas de crear elementos de un grupo de permutaciones, que pueden ser útiles en alguna situación particular, pero que no son de uso muy frecuente.
    </p>
  
      <sage permid="uwW">
        <input>
        sigma1 = G("(1,3)(2,5,4)")
        sigma1
        </input>
        <output>(1,3)(2,5,4)</output>
      </sage>
  
      <sage permid="aEf">
        <input>
        sigma2 = G([(1,3),(2,5,4)])
        sigma2
        </input>
        <output>(1,3)(2,5,4)</output>
      </sage>
  
      <sage permid="GLo">
        <input>
        sigma3 = G([3,5,1,2,4])
        sigma3
        </input>
        <output>(1,3)(2,5,4)</output>
      </sage>
  
      <sage permid="mSx">
        <input>sigma1 == sigma2</input>
        <output>True</output>
      </sage>
  
      <sage permid="SZG">
        <input>sigma2 == sigma3</input>
        <output>True</output>
      </sage>
  
      <sage permid="zgP">
        <input>sigma2.cycle_tuples()</input>
        <output>[(1, 3), (2, 5, 4)]</output>
      </sage>
  
      <sage permid="fnY">
        <input>[sigma3(x) for x in G.domain()]</input>
        <output>[3, 5, 1, 2, 4]</output>
      </sage>
  
      <p permid="xeL">La segunda versión de <m>\sigma</m> es una lista de <q>tuplas</q>, que requiere muchas comas y estas deben ser incluidas a su vez en una lista.  (Una tupla de largo uno debe ser escrita como <c>(4,)</c> para distinguirla del uso de paréntesis para agrupar, como en <c>5*(4)</c>.)  La tercera versión usa la <q>fila inferior</q> de la notación más engorrosa de dos filas introducida al comienzo del capítulo <mdash/> es una lista ordenada de las <em>imágenes</em> de la permutación cuando es considerada como una función.
    </p>
  
      <p permid="dlU">Vemos que sin importar las tres formas diferentes de ingreso, todas las versiones de <m>\sigma</m> se muestran de la misma manera, y más aún son iguales entre sí.  (Esta es una sutil diferencia entre <mdash/> lo que un objeto <em>es</em> en Sage versus como un objeto se <em>muestra</em>.)</p>
  
      <p permid="Jtd">Podemos ser aún más cuidadosos sobre la naturaleza de nuestros elementos.  Note que una vez que Sage comienza, puede promover el producto <m>\tau\sigma</m> al grupo mayor de permutaciones.  Podemos <q>promover</q> elementos a grupos mayores de permutaciones, pero sería un error tratar de forzar un elemento en un grupo simétrico demasiado pequeño.
    </p>
  
      <sage permid="Lvh">
        <input>
        H = SymmetricGroup(4)
        sigma = H("(1,2,3,4)")
        G = SymmetricGroup(6)
        tau = G("(1,2,3,4,5,6)")
        rho = tau * sigma
        rho
        </input>
        <output>(1,3)(2,4,5,6)</output>
      </sage>
  
      <sage permid="rCq">
        <input>sigma.parent()</input>
        <output>Symmetric group of order 4! as a permutation group</output>
      </sage>
  
      <sage permid="XJz">
        <input>tau.parent()</input>
        <output>Symmetric group of order 6! as a permutation group</output>
      </sage>
  
      <sage permid="DQI">
        <input>rho.parent()</input>
        <output>Symmetric group of order 6! as a permutation group</output>
      </sage>
  
      <sage permid="jXR">
        <input>tau.parent() == rho.parent()</input>
        <output>True</output>
      </sage>
  
      <sage permid="Qfa">
        <input>
        sigmaG = G(sigma)
        sigmaG.parent()
        </input>
        <output>Symmetric group of order 6! as a permutation group</output>
      </sage>
  
      <p permid="pAm">Es un error intentar coercionar una permutación con demasiados símbolos a un grupo de permutaciones que use menos símbolos.
    </p>
  
      <sage permid="wmj">
        <input>tauH = H(tau)</input>
        <output>
          Traceback (most recent call last):
          ...
          ValueError: invalid data to initialize a permutation
        </output>
      </sage>
  
      <p permid="VHv">Mejor que trabajar simplemente con elementos del grupo simétrico, podemos crear diversos grupos de permutaciones en Sage.  A continuación una muestra para comenzar:</p>
  
      <table xml:id="permute-table-sage-permutation-groups" permid="RlX">
        <title>Algunos grupos de permutaciones en Sage</title>
        <tabular halign="left" top="medium" permid="xtg">
          <row bottom="medium">
            <cell>Comando Sage</cell>
            <cell>Descripción</cell>
          </row>
          <row>
            <cell><c>SymmetricGroup(n)</c> </cell>
            <cell>Grupo simétrico en <m>n</m> símbolos, <m>n!</m> elementos</cell>
          </row>
          <row>
            <cell><c>DihedralGroup(n)</c></cell>
            <cell>Simetrías de un <m>n</m>-ágono, <m>2n</m> elementos.</cell>
          </row>
          <row>
            <cell><c>CyclicPermutationGroup(n)</c></cell>
            <cell>Rotaciones de un <m>n</m>-ágono, <m>n</m> elementos</cell>
          </row>
          <row>
            <cell><c>AlternatingGroup(n)</c></cell>
            <cell>Grupo alternante en <m>n</m> símbolos, <m>n!/2</m> elementos</cell>
          </row>
          <row bottom="medium">
            <cell><c>KleinFourGroup()</c></cell>
            <cell>Un grupo no cíclico de orden 4</cell>
          </row> 
        </tabular>
      </table>
  
      <sage type="practice"/>
  
      <p permid="BOE">Usted también puede localizar grupos de permutaciones en Sage usando el catálogo de <c>grupos</c>.  En la próxima celda ponga el cursor después del punto final y presione la tecla de tabular (TAB).  Obtendrá una lista de métodos que puede usar para crear grupos de permutaciones.  Como siempre, ponga un signo de interrogación después de un método y presione la tecla de tabular para obtener documentación en línea del método.  (esto funciona en una celda de Sage normal pero no parece funcionar en el "libro")</p>
  
      <sage doctest="not tested" permid="dyL">
        <input>groups.permutation.</input>
      </sage>
  
    </subsection>
  
    <subsection permid="ROn">
      <title>Propiedades de Permutaciones (Elementos)</title>
  
      <p permid="hVN">A veces es más fácil tomar un elemento de una lista de elementos en un grupo de permutaciones, así ya está asociado a un "parent" y no hay necesidad de hacer ninguna coerción.  En lo que sigue, <c>rotate</c> y <c>flip</c> son automáticamente elementos de <c>G</c> por la forma en que fueron obtenidos.
    </p>
  
      <sage permid="cts">
        <input>
        D = DihedralGroup(5)
        elements = D.list(); elements
        </input>
        <output>
          [(), (1,5,4,3,2), (1,4,2,5,3), (1,3,5,2,4), (1,2,3,4,5), (2,5)(3,4),
          (1,5)(2,4), (1,4)(2,3), (1,3)(4,5), (1,2)(3,5)]
        </output>
      </sage>
  
      <sage permid="IAB">
        <input>
          rotate = elements[4]
          flip = elements[7]
          flip*rotate == rotate* flip
        </input>
        <output>False</output>
      </sage>
  
      <p permid="OcW">Vemos con esta última prueba que el grupo de simetrías de un pentágono es no abeliano.  Pero hay una manera más fácil.
    </p>
  
      <sage permid="oHK">
        <input>
        D = DihedralGroup(5)
        D.is_abelian()
        </input>
        <output>False</output>
      </sage>
  
      <p permid="ukf">Existen muchos métodos, tanto para los grupos de permutaciones como para sus elementos.  Use la celda vacía de más abajo para crear un grupo de permutaciones (el que quiera) y un elemento de un grupo de permutaciones (cualquiera).  A continuación usa la tab-completion para ver todos los métodos disponibles para un elemento, o para un grupo (nombre, punto, tecla-tab).  Algunos nombres los puede reconocer, otros los aprenderemos en los capítulos siguientes, algunos son herramientas muy especializadas de investigación que podría usar para desarrollar su tesis de<nbsp/>doctorado en  teoría de grupos.  Para cualquiera de estos métodos, recuerde que puede escribir el nombre, seguido de un signo de interrogación, para ver la documentación y ejemplos.  <em>Experimente y explore</em> <mdash/> es realmente difícil hechar a perder algo. </p> 
  
      <sage type="practice"/>
  
      <p permid="aro">Acá hay algunos ejemplos de varios métodos disponibles.
    </p>
  
      <sage permid="UOT">
        <input>
        A4 = AlternatingGroup(4)
        A4.order()
        </input>
        <output>12</output>
      </sage>
  
      <sage permid="AWc">
        <input>A4.is_finite()</input>
        <output>True</output>
      </sage>
  
      <sage permid="hdl">
        <input>A4.is_abelian()</input>
        <output>False</output>
      </sage>
  
      <sage permid="Nku">
        <input>A4.is_cyclic()</input>
        <output>False</output>
      </sage>
  
      <sage permid="trD">
        <input>
        sigma = A4("(1,2,4)")
        sigma^-1
        </input>
        <output>(1,4,2)</output>
      </sage>
  
      <sage permid="ZyM">
        <input>sigma.order()</input>
        <output>3</output>
      </sage>
  
      <p permid="Gyx">Un método útil al estudiar el grupo alternante es el <c>.sign()</c> implementado para elementos de un grupo de permutaciones.  Retorna <c>1</c> si la permutación es par y <c>-1</c> si es impar.
    </p>
  
      <sage permid="FFV">
        <input>
        G = SymmetricGroup(3)
        sigma = G("(1,2)")
        tau = G("(1,3)")
        rho = sigma*tau
        sigma.sign()
        </input>
        <output>-1</output>
      </sage>
  
      <sage permid="lNe">
        <input>rho.sign()</input>
        <output>1</output>
      </sage>
  
      <p permid="mFG">Podemos crear subgrupos entregándole al grupo una lista de <q>generadores.</q>  Estos elementos se usan para <q>generar</q> un subgrupo <mdash/> imagine multiplicar estos elementos (y sus inversos) una y otra vez, creando nuevos elementos que también deben estar en el subgrupo y que también participan de nuevos productos, hasta que no aparezcan nuevos elementos.  Esta definición termina con un enunciado terriblemente impreciso, pero debiera se suficiente por ahora.  Una mejor definición es que el subgrupo generado por los elementos es el menor subgrupo que contiene todos los generadores <mdash/> lo que está bien si conocemos todos los subgrupos de antemano.
    </p>
  
      <p permid="SMP">Con un único generador, los productos repetidos son simplemente las potencias del generador.  El grupo generado en este caso es cíclico.  Con dos (o más) generadores, especialmente en un grupo no abeliano, la situación puede ser mucho, mucho más complicada.  Empecemos con un generador.  Pero no olvide ponerlo en una lista de todas formas.
    </p>
  
      <sage permid="RUn">
        <input>
        A4 = AlternatingGroup(4)
        sigma = A4("(1,2,4)")
        sg = A4.subgroup([sigma])
        sg
        </input>
        <output>
          Subgroup generated by [(1,2,4)]
          of (Alternating group of order 4!/2 as a permutation group)
        </output>
      </sage>
  
      <sage permid="ybw">
        <input>sg.order()</input>
        <output>3</output>
      </sage>
  
      <sage permid="eiF">
        <input>sg.list()</input>
        <output>[(), (1,2,4), (1,4,2)]</output>
      </sage>
  
      <sage permid="KpO">
        <input>sg.is_abelian()</input>
        <output>True</output>
      </sage>
  
      <sage permid="qwX">
        <input>sg.is_cyclic()</input>
        <output>True</output>
      </sage>
  
      <sage permid="WEg">
        <input>sg.is_subgroup(A4)</input>
        <output>True</output>
      </sage>
  
      <p permid="yTY">Podemos ahora rehacer el ejemplo del principio del capítulo.  Traducimos los elementos a notación cíclica, construimos el subgrupo formado a partir de dos generadores (el subgrupo no es cíclico), y como el subgrupo es abeliano, no es necesario que veamos la tabla de Cayley de Sage como una reflexión diagonal de la tabla en el ejemplo.
    </p>
  
      <sage permid="CLp">
        <input>
        G = SymmetricGroup(5)
        sigma = G("(4,5)")
        tau = G("(1,3)")
        H = G.subgroup([sigma, tau])
        H.list()
        </input>
        <output>[(), (4,5), (1,3), (1,3)(4,5)]</output>
      </sage>
  
      <sage permid="iSy">
        <input>
        text_names = ['id', 'sigma', 'tau', 'mu']
        H.cayley_table(names=text_names)
        </input>
        <output>
          *     id sigma   tau    mu
           +------------------------
           id|    id sigma   tau    mu
        sigma| sigma    id    mu   tau
          tau|   tau    mu    id sigma
           mu|    mu   tau sigma    id
        </output>
      </sage>
  
      <sage type="practice"/>
  
    </subsection>
  
    <subsection xml:id="permute-subsection-motion-group-cube-sage" permid="xVw">
      <title>Grupo de Movimientos de un Cubo</title>
  
      <p permid="fbh">Podríamos imitar el ejemplo en el texto y crear elementos de <m>S_4</m> como permutaciones de las diagonales.  Una construcción más obvia, pero menos esclarecedora, es considerar las  8 esquinas del cubo como los elementos a permutar.  Entonces algunas simetrías obvias del cubo provienen de pasar un eje por los centros de dos caras opuestas, con cuartos de vueltas y medias vueltas en torno a estos ejes. Con tres ejes y cuatro rotaciones por eje, obtenemos 12 simetrías, excepto que hemos contado la identidad tres veces.
    </p>
  
      <p permid="Liq">Etiquete las cuatro esquinas superiores del <m>1</m> al <m>4</m>, poniendo el <m>1</m> en la esquina delantera-izquierda, y continuando en sentido horario visto desde arriba.  Use del <m>5</m> al <m>8</m> para las esquinas inferiores, de manera que  <m>5</m> quede directamente bajo el <m>1</m>, <m>6</m> bajo <m>2</m>, etc.  Usaremos cuartos de vuelta, en sentido horario, en torno a cada eje, mirando desde arriba, el frente y el lado derecho respectivamente.
    </p>
  
      <sage permid="OZH">
        <input>
        G = SymmetricGroup(8)
        above = G("(1,2,3,4)(5,6,7,8)")
        front = G("(1,4,8,5)(2,3,7,6)")
        right = G("(1,2,6,5)(3,7,8,4)")
        cube = G.subgroup([above, front, right])
        cube.order()
        </input>
        <output>24</output>
      </sage>
  
      <sage permid="vgQ">
        <input>cube.list()</input>
        <output>
          [(), (1,3)(2,4)(5,7)(6,8), (1,6)(2,5)(3,8)(4,7), (1,8)(2,7)(3,6)(4,5),
          (1,4,3,2)(5,8,7,6), (1,2,3,4)(5,6,7,8), (1,5)(2,8)(3,7)(4,6),
          (1,7)(2,6)(3,5)(4,8), (2,5,4)(3,6,8), (1,3,8)(2,7,5), (1,6,3)(4,5,7),
          (1,8,6)(2,4,7), (1,4)(2,8)(3,5)(6,7), (1,2,6,5)(3,7,8,4), (1,5,6,2)(3,4,8,7),
          (1,7)(2,3)(4,6)(5,8), (2,4,5)(3,8,6), (1,3,6)(4,7,5), (1,6,8)(2,7,4),
          (1,8,3)(2,5,7), (1,4,8,5)(2,3,7,6), (1,2)(3,5)(4,6)(7,8), (1,5,8,4)(2,6,7,3),
          (1,7)(2,8)(3,4)(5,6)]
        </output>
      </sage>
  
      <p permid="rpz">Como sabemos por la discusión en el texto que el grupo de simetrías tiene <m>24</m> elementos, vemos que estos tres generadores son suficientes para crear todas las simetrías.  Esto sugiere varias preguntas que se pueden encontrar en el <xref ref="permute-sage-exercise-cube-symmetry"/>.
    </p>
  
      <sage type="practice"/>
  
    </subsection>
  </section>
  <exercises xml:id="permute-sage-exercises" component="sage-exercises" permid="KjO">
    <title>Ejercicios en Sage</title>
  
    <introduction permid="WcH">
      <p permid="Rtb">Estos ejercicios tienen el objetivo de familiarizarle con los grupos de permutaciones en Sage.
    </p>
    </introduction>
  
    <exercise number="1" permid="CjQ" xml:id="permute-sage-exercise-create-S10">
      <statement>
        <p permid="Kyw">Cree el grupo simétrico completo <m>S_{10}</m> con el comando <c>G = SymmetricGroup(10)</c>.
    </p>
      </statement>
      
    </exercise>
  
    <exercise number="2" permid="iqZ" xml:id="permute-sage-exercise-create-elements-of-S10">
      <statement>
        <p permid="qFF">Cree elementos de <c>G</c> con los siguientes métodos.  Preste atención a las comas, comillas, corchetes, paréntesis.  Los primeros dos usan cadenas de caracteres (texto) como entrada, imitando la forma en que escribimos las permutaciones (pero con comas).  La siguientes dos usan listas de tuplas.
    </p>
  
        <ul permid="uTM">
          <li permid="peA"><p permid="cJe"><c>a = G("(5,7,2,9,3,1,8)")</c></p></li>
          <li permid="VlJ"><p permid="IQn"><c>b = G("(1,3)(4,5)")</c></p></li>
          <li permid="BsS"><p permid="oXw"><c>c = G([(1,2),(3,4)])</c></p></li>
          <li permid="hAb"><p permid="VeF"><c>d = G([(1,3),(2,5,8),(4,6,7,9,10)])</c></p></li>
        </ul>
  
        <ol permid="Hie">
          <li permid="lOv"><p permid="BlO">Calcule <m>a^3</m>, <m>bc</m>, <m>ad^{-1}b</m>.
    </p></li>
          <li permid="RVE"><p permid="hsX">Calcule los órdenes de cada uno de los elemetos individuales (<c>a</c> hasta <c>d</c>) usando un solo método de los elementos del grupo de permutaciones.
    </p></li>
          <li permid="ycN"><p permid="NAg">Use el método <c>.sign()</c> para determinar si <m>a,b,c,d</m> son pares o impares.
    </p></li>
          <li permid="ejW"><p permid="tHp">Cree dos subgrupos cíclicos de <m>G</m> con los comandos:
          <ul permid="baV">
            <li permid="NHk"><p permid="qMJ"><c>H = G.subgroup([a])</c></p></li>
            <li permid="tOt"><p permid="ZOy"><c>K = G.subgroup([d])</c></p></li>
          </ul>
          Liste, y estudie, los elementos de cada subgrupo.  Sin usar Sage, indique el orden de cada subgrupo de <m>K</m>.  Luego use  Sage para construir un subgrupo de <m>K</m> de orden 10.
    </p></li>
          <li permid="Krf"><p permid="FVH">Subgrupos más complicados se pueden formar usando dos o más generadores.  Construya un subgrupo <m>L</m> de <m>G</m> con el comando <c>L = G.subgroup([b,c])</c>.  Calcule el orden de <m>L</m> y liste todos los elementos de <m>L</m>.
    </p></li>
        </ol>
      </statement>
      
  
    </exercise>
  
    <exercise number="3" permid="Oyi" xml:id="permute-sage-exercise-create-A4">
      <statement>
        <p permid="WMO">Construya el grupo de simetrías del tetraedro (también es el grupo alternante en 4 símbolos, <m>A_4</m>) con el comando <c>A=AlternatingGroup(4)</c>.  Usando herramientas tales como órdenes de elementos, y generadores de subgrupos, vea si puede encontrar <em>todos</em> los subgrupos de <m>A_4</m> (cada uno exactamente una vez).  Haga esto sin usar el método <c>.subgroups()</c> para justificar que su respuesta es correcta (aunque puede ser una forma conveniente de verificar su resultado).
    </p>
  
        <p permid="CTX">Escriba un resumen ordenado de su respuesta<mdash/>no simplemente una lista larga escupida por Sage.  La idea es usar Sage como una herramienta, en la medida en que sea necesario, pero básicamente su respuesta debe ser un párrafo conciso y/o una tabla. Esta es la única parte de esta tarea sin instrucciones precisas y claras, así es que dedique el tiempo suficiente a esta parte para que le quede bien.  Ayuda: ningún subgrupo de  <m>A_4</m> requiere más de dos generadores.
    </p>
      </statement>
      
  
    </exercise>
  
    <exercise number="4" xml:id="permute-sage-exercise-cube-symmetry" permid="uFr">
      <statement>
      <p permid="jbg">La subsecció<xref ref="permute-subsection-motion-group-cube" text="title"/> describe las <m>24</m> simetrías de un cubo como un subgrupo del grupo simétrico <m>S_8</m> generado por tres rotaciones.  Conteste las siguientes preguntas sobre este grupo de simetrías.
    </p>
      <ol permid="npn">
        <li permid="qyo"><p permid="mcQ">De la lista de elementos del grupo, ¿puede localizar la 10 rotaciones en torno a los ejes?  (Ayuda: la identidad es fácil, las otras nueve nunca envían un símbolo en sí mismo.)</p></li>
  
        <li permid="WFx"><p permid="SjZ">¿Puede identificar las seis simetrías que son transposición de diagonales?  (Ayuda: <c>[g for g in cube if g.order() == 2]</c> es un buen filtro inicial.)</p></li>
  
        <li permid="CMG"><p permid="yri">Verifique que cualquiera dos de las rotaciones (<c>above</c>, <c>front</c>, <c>right</c>) son suficientes para generar el grupo completo.  ¿Cómo sabe que cada par genera el grupo completo?</p></li>
  
        <li permid="iTP"><p permid="eyr">¿Puede expresar una de las transposiciones diagonales como productos de rotaciones?  Este puede ser un problema notablemente difícil, especialmente para un software.  Se conoce como el <q>problema de las palabras.</q></p></li>
  
        <li permid="PaY"><p permid="KFA">Numere las seis caras del cubo con los números del <m>1</m> al <m>6</m> (de cualquier forma que desee).  Ahora considere las mismas tres simetrías usadas antes (rotaciones en cuarto de vuelta en torno a los ejes), pero ahora vistas como permutaciones de las seis caras.  De esta manera, podemos construir cada simetría como un elemento de  <m>S_6</m>.  Verifique que el subgrupo generado por estas simetrías es el grupo completo de simetrías del cubo.  Nuevamente, en lugar de usar tres generadores, intente usando solo dos.
    </p></li>
      </ol>
      </statement>
      
    </exercise>
  
    <exercise number="5" permid="aMA" xml:id="permute-sage-exercise-S10-subgroup">
      <statement>
        <p permid="Pip">Guarde su trabajo, y vea si puede lograr que Sage se caiga construyendo el subgrupo de <m>S_{10}</m> generado por los elementos <c>b</c> y <c>d</c> de orden <m>2</m> y <m>30</m> de antes.  <em>No entregue</em> la lista de elementos de <c>N</c> como parte de su trabajo.
    </p>
  
        <sage type="display" permid="JFU">
          <input>
          N = G.subgroup([b,d])
          N.list()
          </input>
        </sage>
  
        <p permid="vpy">¿Cuál es el orden de <m>N</m>?</p>
      </statement>
      
    </exercise>
  
  </exercises>

</chapter>
